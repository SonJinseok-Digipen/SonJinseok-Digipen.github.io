.TH "md__ase_sprite_aseprite_third_party__i_x_web_socket_docs__c_h_a_n_g_e_l_o_g" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__ase_sprite_aseprite_third_party__i_x_web_socket_docs__c_h_a_n_g_e_l_o_g \- Changelog 
.PP
All changes to this project will be documented in this file\&.
.SH "[11\&.4\&.1] - 2022-04-23"
.PP
vckpg + cmake fix, to handle zlib as a dependency better
.SH "[11\&.4\&.0] - 2022-01-05"
.PP
(Windows) Use wsa select event, which should lead to a much better behavior on Windows in general, and also when sending large payloads (#342) Fix 'HTTP/1\&.1 400 Illegal character CNTL=0xf' caused by serverMaxWindowBits/clientMaxWindowBits being uint8_t (signed char)\&. (#341) Export symbols into \&.def files Export symbols into \&.def files on MSVC (#339) Include <cerrno> to provide standard error constants (#338) Improved compatibility - fix mingw crossbuild (#337) Allow to cancel asynchronous \fBHTTP\fP requests (#332) Fix errors in example code\&. (#336)
.SH "[11\&.3\&.2] - 2021-11-24"
.PP
(server) Add getters for basic Servers properties (like port, host, etc\&.\&.\&.) (#327) + fix one compiler warning
.SH "[11\&.3\&.1] - 2021-10-22"
.PP
(library/cmake) Compatible with MbedTLS 3 + fix a bug on Windows where the incorrect remote port is computed (#320)
.SH "[11\&.3\&.0] - 2021-09-20"
.PP
(library/cmake) Only find OpenSSL, MbedTLS, zlib if they have not already been found, make CMake install optional (#317) + Use GNUInstallDirs in cmake (#318)
.SH "[11\&.2\&.10] - 2021-07-27"
.PP
(ws) bump CLI command line parsing library from 1\&.8 to 2\&.0
.SH "[11\&.2\&.9] - 2021-06-08"
.PP
(ws) ws connect has a -g option to gzip decompress messages for API such as the websocket Huobi Global\&.
.SH "[11\&.2\&.8] - 2021-06-03"
.PP
(websocket client + server) WebSocketMessage class tweak to fix unsafe patterns
.SH "[11\&.2\&.7] - 2021-05-27"
.PP
(websocket server) Handle and accept firefox browser special upgrade value (keep-alive, Upgrade)
.SH "[11\&.2\&.6] - 2021-05-18"
.PP
(Windows) move EINVAL (re)definition from \fBIXSocket\&.h\fP to \fBIXNetSystem\&.h\fP (fix #289)
.SH "[11\&.2\&.5] - 2021-04-04"
.PP
(http client) DEL is not an \fBHTTP\fP method name, but DELETE is
.SH "[11\&.2\&.4] - 2021-03-25"
.PP
(cmake) install \fBIXUniquePtr\&.h\fP
.SH "[11\&.2\&.3] - 2021-03-24"
.PP
(ssl + windows) missing include for CertOpenStore function
.SH "[11\&.2\&.2] - 2021-03-23"
.PP
(ixwebsocket) version bump
.SH "[11\&.2\&.1] - 2021-03-23"
.PP
(ixwebsocket) version bump
.SH "[11\&.2\&.0] - 2021-03-23"
.PP
(ixwebsocket) correct mingw support (gcc on windows)
.SH "[11\&.1\&.4] - 2021-03-23"
.PP
(ixwebsocket) add getMinWaitBetweenReconnectionRetries
.SH "[11\&.1\&.3] - 2021-03-23"
.PP
(ixwebsocket) New option to set the min wait between reconnection attempts\&. Still default to 1ms\&. (setMinWaitBetweenReconnectionRetries)\&.
.SH "[11\&.1\&.2] - 2021-03-22"
.PP
(ws) initialize maxWaitBetweenReconnectionRetries to a non zero value ; a zero value was causing spurious reconnections attempts
.SH "[11\&.1\&.1] - 2021-03-20"
.PP
(cmake) Library can be built as a static or a dynamic library, controlled with BUILD_SHARED_LIBS\&. Default to static library
.SH "[11\&.1\&.0] - 2021-03-16"
.PP
(ixwebsocket) Use LEAN_AND_MEAN Windows define to help with undefined link error when building a DLL\&. Support websocket server disablePerMessageDeflate option correctly\&.
.SH "[11\&.0\&.9] - 2021-03-07"
.PP
(ixwebsocket) Expose setHandshakeTimeout method
.SH "[11\&.0\&.8] - 2020-12-25"
.PP
(ws) trim ws dependencies no more ixcrypto and ixcore deps
.SH "[11\&.0\&.7] - 2020-12-25"
.PP
(ws) trim ws dependencies, only depends on ixcrypto and ixcore
.SH "[11\&.0\&.6] - 2020-12-22"
.PP
(build) rename makefile to makefile\&.dev to ease cmake BuildExternal (fix #261)
.SH "[11\&.0\&.5] - 2020-12-17"
.PP
(ws) Implement simple header based websocket authorization technique to reject client which do not supply a certain header ('Authorization') with a special value (see doc)\&.
.SH "[11\&.0\&.4] - 2020-11-16"
.PP
(ixwebsocket) Handle EINTR return code in ix::poll and IXSelectInterrupt
.SH "[11\&.0\&.3] - 2020-11-16"
.PP
(ixwebsocket) Fix #252 / regression in 11\&.0\&.2 with string comparisons
.SH "[11\&.0\&.2] - 2020-11-15"
.PP
(ixwebsocket) use a C++11 compatible make_unique shim
.SH "[11\&.0\&.1] - 2020-11-11"
.PP
(socket) replace a std::vector with an std::array used as a tmp buffer in Socket::readBytes
.SH "[11\&.0\&.0] - 2020-11-11"
.PP
(openssl security fix) in the client to server connection, peer verification is not done in all cases\&. See https://github.com/machinezone/IXWebSocket/pull/250
.SH "[10\&.5\&.7] - 2020-11-07"
.PP
(docker) build docker container with zlib disabled
.SH "[10\&.5\&.6] - 2020-11-07"
.PP
(cmake) DEFLATE -> Deflate in CMake to stop warnings about casing
.SH "[10\&.5\&.5] - 2020-11-07"
.PP
(ws autoroute) Display result in compliant way (AUTOROUTE IXWebSocket :: N ms) so that result can be parsed easily
.SH "[10\&.5\&.4] - 2020-10-30"
.PP
(ws gunzip + IXGZipCodec) Can decompress gziped data with libdeflate\&. ws gunzip computed output filename was incorrect (was the extension aka gz) instead of the file without the extension\&. Also check whether the output file is writeable\&.
.SH "[10\&.5\&.3] - 2020-10-19"
.PP
(http code) With zlib disabled, some code should not be reached
.SH "[10\&.5\&.2] - 2020-10-12"
.PP
(ws curl) Add support for --data-binary option, to set the request body\&. When present the request will be sent with the POST verb
.SH "[10\&.5\&.1] - 2020-10-09"
.PP
(http client + server + ws) Add support for compressing http client requests with gzip\&. --compress_request argument is used in ws to enable this\&. The Content-Encoding is set to gzip, and decoded on the server side if present\&.
.SH "[10\&.5\&.0] - 2020-09-30"
.PP
(http client + server + ws) Add support for uploading files with ws -F foo=@filename, new -D http server option to debug incoming client requests, internal api changed for http POST, PUT and PATCH to supply an HttpFormDataParameters
.SH "[10\&.4\&.9] - 2020-09-30"
.PP
(http server + utility code) Add support for doing gzip compression with libdeflate library, if available
.SH "[10\&.4\&.8] - 2020-09-30"
.PP
(cmake) Stop using FetchContent cmake module to retrieve jsoncpp third party dependency
.SH "[10\&.4\&.7] - 2020-09-28"
.PP
(ws) add gzip and gunzip ws sub commands
.SH "[10\&.4\&.6] - 2020-09-26"
.PP
(cmake) use FetchContent cmake module to retrieve jsoncpp third party dependency
.SH "[10\&.4\&.5] - 2020-09-26"
.PP
(cmake) use FetchContent cmake module to retrieve spdlog third party dependency
.SH "[10\&.4\&.4] - 2020-09-22"
.PP
(cobra connection) retrieve cobra server connection id from the cobra handshake message and display it in ws clients, metrics publisher and bots
.SH "[10\&.4\&.3] - 2020-09-22"
.PP
(cobra 2 cobra) specify as an \fBHTTP\fP header which channel we will republish to
.SH "[10\&.4\&.2] - 2020-09-18"
.PP
(cobra bots) change an error log to a warning log when reconnecting because no messages were received for a minute
.SH "[10\&.4\&.1] - 2020-09-18"
.PP
(cobra connection and bots) set an \fBHTTP\fP header when connecting to help with debugging bots
.SH "[10\&.4\&.0] - 2020-09-12"
.PP
(http server) read body request when the Content-Length is specified + set timeout to read the request to 30 seconds max by default, and make it configurable as a constructor parameter
.SH "[10\&.3\&.5] - 2020-09-09"
.PP
(ws) autoroute command exit on its own once all messages have been received
.SH "[10\&.3\&.4] - 2020-09-04"
.PP
(docker) ws docker file installs strace
.SH "[10\&.3\&.3] - 2020-09-02"
.PP
(ws) echo_client command renamed to autoroute\&. Command exit once the server close the connection\&. push_server commands exit once N messages have been sent\&.
.SH "[10\&.3\&.2] - 2020-08-31"
.PP
(ws + cobra bots) add a cobra_to_cobra ws subcommand to subscribe to a channel and republish received events to a different channel
.SH "[10\&.3\&.1] - 2020-08-28"
.PP
(socket servers) merge the ConnectionInfo class with the ConnectionState one, which simplify all the server apis
.SH "[10\&.3\&.0] - 2020-08-26"
.PP
(ws) set the main thread name, to help with debugging in XCode, gdb, lldb etc\&.\&.\&.
.SH "[10\&.2\&.9] - 2020-08-19"
.PP
(ws) cobra to python bot / take a module python name as argument foo\&.bar\&.baz instead of a path foo/bar/baz\&.py
.SH "[10\&.2\&.8] - 2020-08-19"
.PP
(ws) on Linux with mbedtls, when the system ca certs are specified (the default) pick up sensible OS supplied paths (tested with CentOS and Alpine)
.SH "[10\&.2\&.7] - 2020-08-18"
.PP
(ws push_server) on the server side, stop sending and close the connection when the remote end has disconnected
.SH "[10\&.2\&.6] - 2020-08-17"
.PP
(ixwebsocket) replace std::unique_ptr<unsigned char[]> with std::array for some fixed arrays (which are in C++11)
.SH "[10\&.2\&.5] - 2020-08-15"
.PP
(ws) merge all ws_*\&.cpp files into a single one to speedup compilation
.SH "[10\&.2\&.4] - 2020-08-15"
.PP
(socket server) in the loop accepting connections, call select without a timeout on unix to avoid busy looping, and only wake up when a new connection happens
.SH "[10\&.2\&.3] - 2020-08-15"
.PP
(socket server) instead of busy looping with a sleep, only wake up the GC thread when a new thread will have to be joined, (we know that thanks to the ConnectionState OnSetTerminated callback
.SH "[10\&.2\&.2] - 2020-08-15"
.PP
(socket server) add a callback to the ConnectionState to be invoked when the connection is terminated\&. This will be used by the SocketServer in the future to know on time that the associated connection thread can be terminated\&.
.SH "[10\&.2\&.1] - 2020-08-15"
.PP
(socket server) do not create a select interrupt object everytime when polling for notifications while waiting for new connections, instead use a persistent one which is a member variable
.SH "[10\&.2\&.0] - 2020-08-14"
.PP
(ixwebsocket client) handle \fBHTTP\fP redirects
.SH "[10\&.2\&.0] - 2020-08-13"
.PP
(ws) upgrade to latest version of nlohmann json (3\&.9\&.1 from 3\&.2\&.0)
.SH "[10\&.1\&.9] - 2020-08-13"
.PP
(websocket proxy server) add ability to map different hosts to different websocket servers, using a json config file
.SH "[10\&.1\&.8] - 2020-08-12"
.PP
(ws) on macOS, with OpenSSL or MbedTLS, use /etc/ssl/cert\&.pem as the system certs
.SH "[10\&.1\&.7] - 2020-08-11"
.PP
(ws) -q option imply info log level, not warning log level
.SH "[10\&.1\&.6] - 2020-08-06"
.PP
(websocket server) Handle programmer error when the server callback is not registered properly (fix #227)
.SH "[10\&.1\&.5] - 2020-08-02"
.PP
(ws) Add a new ws sub-command, push_server\&. This command runs a server which sends many messages in a loop to a websocket client\&. We can receive above 200,000 messages per second (cf #235)\&.
.SH "[10\&.1\&.4] - 2020-08-02"
.PP
(ws) Add a new ws sub-command, echo_client\&. This command sends a message to an echo server, and send back to a server whatever message it does receive\&. When connecting to a local ws echo_server, on my MacBook Pro 2015 I can send/receive around 30,000 messages per second\&. (cf #235)
.SH "[10\&.1\&.3] - 2020-08-02"
.PP
(ws) ws echo_server\&. Add a -q option to only enable warning and error log levels\&. This is useful for bench-marking so that we do not print a lot of things on the console\&. (cf #235)
.SH "[10\&.1\&.2] - 2020-07-31"
.PP
(build) make using zlib optional, with the caveat that some http and websocket features are not available when zlib is absent
.SH "[10\&.1\&.1] - 2020-07-29"
.PP
(websocket client) onProgressCallback not called for short messages on a websocket (fix #233)
.SH "[10\&.1\&.0] - 2020-07-29"
.PP
(websocket client) heartbeat is not sent at the requested frequency (fix #232)
.SH "[10\&.0\&.3] - 2020-07-28"
.PP
compiler warning fixes
.SH "[10\&.0\&.2] - 2020-07-28"
.PP
(ixcobra) CobraConnection: unsubscribe from all subscriptions when disconnecting
.SH "[10\&.0\&.1] - 2020-07-27"
.PP
(socket utility) move ix::getFreePort to ixwebsocket library
.SH "[10\&.0\&.0] - 2020-07-25"
.PP
(ixwebsocket server) change legacy api with 2 nested callbacks, so that the first api takes a weak_ptr<WebSocket> as its first argument
.SH "[9\&.10\&.7] - 2020-07-25"
.PP
(ixwebsocket) add WebSocketProxyServer, from ws\&. Still need to make the interface better\&.
.SH "[9\&.10\&.6] - 2020-07-24"
.PP
(ws) port broadcast_server sub-command to the new server API
.SH "[9\&.10\&.5] - 2020-07-24"
.PP
(unittest) port most unittests to the new server API
.SH "[9\&.10\&.3] - 2020-07-24"
.PP
(ws) port ws transfer to the new server API
.SH "[9\&.10\&.2] - 2020-07-24"
.PP
(websocket client) reset WebSocketTransport onClose callback in the WebSocket destructor
.SH "[9\&.10\&.1] - 2020-07-24"
.PP
(websocket server) reset client websocket callback when the connection is closed
.SH "[9\&.10\&.0] - 2020-07-23"
.PP
(websocket server) add a new simpler API to handle client connections / that API does not trigger a memory leak while the previous one did
.SH "[9\&.9\&.3] - 2020-07-17"
.PP
(build) merge platform specific files which were used to have different implementations for setting a thread name into a single file, to make it easier to include every source files and build the ixwebsocket library (fix #226)
.SH "[9\&.9\&.2] - 2020-07-10"
.PP
(socket server) bump default max connection count from 32 to 128
.SH "[9\&.9\&.1] - 2020-07-10"
.PP
(snake) implement super simple stream sql expression support in snake server
.SH "[9\&.9\&.0] - 2020-07-08"
.PP
(socket+websocket+http+redis+snake servers) expose the remote ip and remote port when a new connection is made
.SH "[9\&.8\&.6] - 2020-07-06"
.PP
(cmake) change the way zlib and openssl are searched
.SH "[9\&.8\&.5] - 2020-07-06"
.PP
(cobra python bots) remove the test which stop the bot when events do not follow cobra metrics system schema with an id and a device entry
.SH "[9\&.8\&.4] - 2020-06-26"
.PP
(cobra bots) remove bots which is not required now that we can use Python extensions
.SH "[9\&.8\&.3] - 2020-06-25"
.PP
(cmake) new python code is optional and enabled at cmake time with -DUSE_PYTHON=1
.SH "[9\&.8\&.2] - 2020-06-24"
.PP
(cobra bots) new cobra metrics bot to send data to statsd using Python for processing the message
.SH "[9\&.8\&.1] - 2020-06-19"
.PP
(cobra metrics to statsd bot) fps slow frame info : do not include os name
.SH "[9\&.8\&.0] - 2020-06-19"
.PP
(cobra metrics to statsd bot) send info about memory warnings
.SH "[9\&.7\&.9] - 2020-06-18"
.PP
(http client) fix deadlock when following redirects
.SH "[9\&.7\&.8] - 2020-06-18"
.PP
(cobra metrics to statsd bot) send info about net requests
.SH "[9\&.7\&.7] - 2020-06-17"
.PP
(cobra client and bots) add batch_size subscription option for retrieving multiple messages at once
.SH "[9\&.7\&.6] - 2020-06-15"
.PP
(websocket) WebSocketServer is not a final class, so that users can extend it (fix #215)
.SH "[9\&.7\&.5] - 2020-06-15"
.PP
(cobra bots) minor aesthetic change, in how we display http headers with a : then space as key value separator instead of :: with no space
.SH "[9\&.7\&.4] - 2020-06-11"
.PP
(cobra metrics to statsd bot) change from a statsd type of gauge to a timing one
.SH "[9\&.7\&.3] - 2020-06-11"
.PP
(redis cobra bots) capture most used devices in a zset
.SH "[9\&.7\&.2] - 2020-06-11"
.PP
(ws) add bare bone redis-cli like sub-command, with command line editing powered by libnoise
.SH "[9\&.7\&.1] - 2020-06-11"
.PP
(redis cobra bots) ws cobra metrics to redis / hostname invalid parsing
.SH "[9\&.7\&.0] - 2020-06-11"
.PP
(redis cobra bots) xadd with maxlen + fix bug in xadd client implementation and ws cobra metrics to redis command argument parsing
.SH "[9\&.6\&.9] - 2020-06-10"
.PP
(redis cobra bots) update the cobra to redis bot to use the bot framework, and change it to report fps metrics into redis streams\&.
.SH "[9\&.6\&.6] - 2020-06-04"
.PP
(statsd cobra bots) statsd improvement: prefix does not need a dot as a suffix, message size can be larger than 256 bytes, error handling was invalid, use core logger for logging instead of std::cerr
.SH "[9\&.6\&.5] - 2020-05-29"
.PP
(http server) support gzip compression
.SH "[9\&.6\&.4] - 2020-05-20"
.PP
(compiler fix) support clang 5 and earlier (contributed by @LunarWatcher)
.SH "[9\&.6\&.3] - 2020-05-18"
.PP
(cmake) revert CMake changes to fix #203 and be able to use an external OpenSSL
.SH "[9\&.6\&.2] - 2020-05-17"
.PP
(cmake) make install cmake files optional to not conflict with vcpkg
.SH "[9\&.6\&.1] - 2020-05-17"
.PP
(windows + tls) mbedtls is the default windows tls backend + add ability to load system certificates with mbdetls on windows
.SH "[9\&.6\&.0] - 2020-05-12"
.PP
(ixbots) add options to limit how many messages per minute should be processed
.SH "[9\&.5\&.9] - 2020-05-12"
.PP
(ixbots) add new class to configure a bot to simplify passing options around
.SH "[9\&.5\&.8] - 2020-05-08"
.PP
(openssl tls) (openssl < 1\&.1) logic inversion - crypto locking callback are not registered properly
.SH "[9\&.5\&.7] - 2020-05-08"
.PP
(cmake) default TLS back to mbedtls on Windows Universal Platform
.SH "[9\&.5\&.6] - 2020-05-06"
.PP
(cobra bots) add a --heartbeat_timeout option to specify when the bot should terminate because no events are received
.SH "[9\&.5\&.5] - 2020-05-06"
.PP
(openssl tls) when OpenSSL is older than 1\&.1, register the crypto locking callback to be thread safe\&. Should fix lots of CI failures
.SH "[9\&.5\&.4] - 2020-05-04"
.PP
(cobra bots) do not use a queue to store messages pending processing, let the bot handle queuing
.SH "[9\&.5\&.3] - 2020-04-29"
.PP
(http client) better current request cancellation support when the HttpClient destructor is invoked (see #189)
.SH "[9\&.5\&.2] - 2020-04-27"
.PP
(cmake) fix cmake broken tls option parsing
.SH "[9\&.5\&.1] - 2020-04-27"
.PP
(http client) Set default values for most HttpRequestArgs struct members (fix #185)
.SH "[9\&.5\&.0] - 2020-04-25"
.PP
(ssl) Default to OpenSSL on Windows, since it can load the system certificates by default
.SH "[9\&.4\&.1] - 2020-04-25"
.PP
(header) Add a space between header name and header value since most http parsers expects it, although it it not required\&. Cf #184 and #155
.SH "[9\&.4\&.0] - 2020-04-24"
.PP
(ssl) Add support for supplying SSL CA from memory, for OpenSSL and MbedTLS backends
.SH "[9\&.3\&.3] - 2020-04-17"
.PP
(ixbots) display sent/receive message, per seconds as accumulated
.SH "[9\&.3\&.2] - 2020-04-17"
.PP
(ws) add a --logfile option to configure all logs to go to a file
.SH "[9\&.3\&.1] - 2020-04-16"
.PP
(cobra bots) add a utility class to factor out the common bots features (heartbeat) and move all bots to used it + convert cobra_subscribe to be a bot and add a unittest for it
.SH "[9\&.3\&.0] - 2020-04-15"
.PP
(websocket) add a positive number to the heartbeat message sent, incremented each time the heartbeat is sent
.SH "[9\&.2\&.9] - 2020-04-15"
.PP
(ixcobra) change cobra event callback to use a struct instead of several objects, which is more flexible/extensible
.SH "[9\&.2\&.8] - 2020-04-15"
.PP
(ixcobra) make CobraConnection_EventType an enum class (CobraEventType)
.SH "[9\&.2\&.7] - 2020-04-14"
.PP
(ixsentry) add a library method to upload a payload directly to sentry
.SH "[9\&.2\&.6] - 2020-04-14"
.PP
(ixcobra) snake server / handle invalid incoming json messages + cobra subscriber in fluentd mode insert a created_at timestamp entry
.SH "[9\&.2\&.5] - 2020-04-13"
.PP
(websocket) WebSocketMessagePtr is a unique_ptr instead of a shared_ptr
.SH "[9\&.2\&.4] - 2020-04-13"
.PP
(websocket) use persistent member variable as temp variables to encode/decode zlib messages in order to reduce transient allocations
.SH "[9\&.2\&.3] - 2020-04-13"
.PP
(ws) add a --runtime option to ws cobra_subscribe to optionally limit how much time it will run
.SH "[9\&.2\&.2] - 2020-04-04"
.PP
(third_party deps) fix #177, update bundled spdlog to 1\&.6\&.0
.SH "[9\&.2\&.1] - 2020-04-04"
.PP
(windows) when using OpenSSL, the system store is used to populate the cacert\&. No need to ship a cacert\&.pem file with your app\&.
.SH "[9\&.2\&.0] - 2020-04-04"
.PP
(windows) ci: windows build with TLS (mbedtls) + verify that we can be build with OpenSSL
.SH "[9\&.1\&.9] - 2020-03-30"
.PP
(cobra to statsd bot) add ability to extract a numerical value and send a timer event to statsd, with the --timer option
.SH "[9\&.1\&.8] - 2020-03-29"
.PP
(cobra to statsd bot) bot init was missing + capture socket error
.SH "[9\&.1\&.7] - 2020-03-29"
.PP
(cobra to statsd bot) add ability to extract a numerical value and send a gauge event to statsd, with the --gauge option
.SH "[9\&.1\&.6] - 2020-03-29"
.PP
(ws cobra subscriber) use a Json::StreamWriter to write to std::cout, and save one std::string allocation for each message printed
.SH "[9\&.1\&.5] - 2020-03-29"
.PP
(docker) trim down docker image (300M -> 12M) / binary built without symbol and size optimization, and source code not copied over
.SH "[9\&.1\&.4] - 2020-03-28"
.PP
(jsoncpp) update bundled copy to version 1\&.9\&.3 (at sha 3beb37ea14aec1bdce1a6d542dc464d00f4a6cec)
.SH "[9\&.1\&.3] - 2020-03-27"
.PP
(docker) alpine docker build with release with debug info, and bundle ca-certificates
.SH "[9\&.1\&.2] - 2020-03-26"
.PP
(mac ssl) rename DarwinSSL -> SecureTransport (see this too -> https://github.com/curl/curl/issues/3733)
.SH "[9\&.1\&.1] - 2020-03-26"
.PP
(websocket) fix data race accessing _socket object without mutex protection when calling wakeUpFromPoll in WebSocketTransport\&.cpp
.SH "[9\&.1\&.0] - 2020-03-26"
.PP
(ixcobra) add explicit event types for handshake, authentication and subscription failure, and handle those by exiting in ws_cobra_subcribe and friends
.SH "[9\&.0\&.3] - 2020-03-24"
.PP
(ws connect) display statistics about how much time it takes to stop the connection
.SH "[9\&.0\&.2] - 2020-03-24"
.PP
(socket) works with unique_ptr<Socket> instead of shared_ptr<Socket> in many places
.SH "[9\&.0\&.1] - 2020-03-24"
.PP
(socket) selectInterrupt member is an unique_ptr instead of being a shared_ptr
.SH "[9\&.0\&.0] - 2020-03-23"
.PP
(websocket) reset per-message deflate codec everytime we connect to a server/client
.SH "[8\&.3\&.4] - 2020-03-23"
.PP
(websocket) fix #167, a long standing issue with sending empty messages with per-message deflate extension (and hopefully other zlib bug)
.SH "[8\&.3\&.3] - 2020-03-22"
.PP
(cobra to statsd) port to windows and add a unittest
.SH "[8\&.3\&.2] - 2020-03-20"
.PP
(websocket+tls) fix hang in tls handshake which could lead to ANR, discovered through unittesting\&.
.SH "[8\&.3\&.1] - 2020-03-20"
.PP
(cobra) CobraMetricsPublisher can be configure with an ix::CobraConfig + more unittest use SSL in server + client
.SH "[8\&.3\&.0] - 2020-03-18"
.PP
(websocket) Simplify ping/pong based heartbeat implementation
.SH "[8\&.2\&.7] - 2020-03-17"
.PP
(ws) ws connect gains a new option to set the interval at which to send pings (ws) ws echo_server gains a new option (-p) to disable responding to pings with pongs
.PP
.PP
.nf
IXWebSocket$ ws connect \-\-ping_interval 2 wss://echo\&.websocket\&.org
Type Ctrl\-D to exit prompt\&.\&.\&.
Connecting to url: wss://echo\&.websocket\&.org
> ws_connect: connected
[2020\-03\-17 23:53:02\&.726] [info] Uri: /
[2020\-03\-17 23:53:02\&.726] [info] Headers:
[2020\-03\-17 23:53:02\&.727] [info] Connection: Upgrade
[2020\-03\-17 23:53:02\&.727] [info] Date: Wed, 18 Mar 2020 06:45:05 GMT
[2020\-03\-17 23:53:02\&.727] [info] Sec\-WebSocket\-Accept: 0gtqbxW0aVL/QI/ICpLFnRaiKgA=
[2020\-03\-17 23:53:02\&.727] [info] sec\-websocket\-extensions:
[2020\-03\-17 23:53:02\&.727] [info] Server: Kaazing Gateway
[2020\-03\-17 23:53:02\&.727] [info] Upgrade: websocket
[2020\-03\-17 23:53:04\&.894] [info] Received pong
[2020\-03\-17 23:53:06\&.859] [info] Received pong
[2020\-03\-17 23:53:08\&.881] [info] Received pong
[2020\-03\-17 23:53:10\&.848] [info] Received pong
[2020\-03\-17 23:53:12\&.898] [info] Received pong
[2020\-03\-17 23:53:14\&.865] [info] Received pong
[2020\-03\-17 23:53:16\&.890] [info] Received pong
[2020\-03\-17 23:53:18\&.853] [info] Received pong

[2020\-03\-17 23:53:19\&.388] [info]
ws_connect: connection closed: code 1000 reason Normal closure

[2020\-03\-17 23:53:19\&.502] [info] Received 208 bytes
[2020\-03\-17 23:53:19\&.502] [info] Sent 0 bytes
.fi
.PP
.SH "[8\&.2\&.6] - 2020-03-16"
.PP
(cobra to sentry bot + docker) default docker file uses mbedtls + ws cobra_to_sentry pass tls options to sentryClient\&.
.SH "[8\&.2\&.5] - 2020-03-13"
.PP
(cobra client) ws cobra subscribe resubscribe at latest position after being disconnected
.SH "[8\&.2\&.4] - 2020-03-13"
.PP
(cobra client) can subscribe with a position
.SH "[8\&.2\&.3] - 2020-03-13"
.PP
(cobra client) pass the message position to the subscription data callback
.SH "[8\&.2\&.2] - 2020-03-12"
.PP
(openssl tls backend) Fix a hand in OpenSSL when using TLS v1\&.3 \&.\&.\&. by disabling TLS v1\&.3
.SH "[8\&.2\&.1] - 2020-03-11"
.PP
(cobra) IXCobraConfig struct has tlsOptions and per message deflate options
.SH "[8\&.2\&.0] - 2020-03-11"
.PP
(cobra) add IXCobraConfig struct to pass cobra config around
.SH "[8\&.1\&.9] - 2020-03-09"
.PP
(ws cobra_subscribe) add a --fluentd option to wrap a message in an enveloppe so that fluentd can recognize it
.SH "[8\&.1\&.8] - 2020-03-02"
.PP
(websocket server) fix regression with disabling zlib extension on the server side\&. If a client does not support this extension the server will handle it fine\&. We still need to figure out how to disable the option\&.
.SH "[8\&.1\&.7] - 2020-02-26"
.PP
(websocket) traffic tracker received bytes is message size while it should be wire size
.SH "[8\&.1\&.6] - 2020-02-26"
.PP
(ws_connect) display sent/received bytes statistics on exit
.SH "[8\&.1\&.5] - 2020-02-23"
.PP
(server) give thread name to some usual worker threads / unittest is broken !!
.SH "[8\&.1\&.4] - 2020-02-22"
.PP
(websocket server) fix regression from 8\&.1\&.2, where per-deflate message compression was always disabled
.SH "[8\&.1\&.3] - 2020-02-21"
.PP
(client + server) Fix #155 / http header parser should treat the space(s) after the : delimiter as optional\&. Fixing this bug made us discover that websocket sub-protocols are not properly serialiazed, but start with a ,
.SH "[8\&.1\&.2] - 2020-02-18"
.PP
(WebSocketServer) add option to disable deflate compression, exposed with the -x option to ws echo_server
.SH "[8\&.1\&.1] - 2020-02-18"
.PP
(ws cobra to statsd and sentry sender) exit if no messages are received for one minute, which is a sign that something goes wrong on the server side\&. That should be changed to be configurable in the future
.SH "[8\&.1\&.0] - 2020-02-13"
.PP
(http client + sentry minidump upload) Multipart stream closing boundary is invalid + mark some options as mandatory in the command line tools
.SH "[8\&.0\&.7] - 2020-02-12"
.PP
(build) remove the unused subtree which was causing some way of installing to break
.SH "[8\&.0\&.6] - 2020-01-31"
.PP
(snake) add an option to disable answering pongs as response to pings, to test cobra client behavior with hanged connections
.SH "[8\&.0\&.5] - 2020-01-31"
.PP
(IXCobraConnection) set a ping timeout of 90 seconds\&. If no pong messages are received as responses to ping for a while, give up and close the connection
.SH "[8\&.0\&.4] - 2020-01-31"
.PP
(cobra to sentry) remove noisy logging
.SH "[8\&.0\&.3] - 2020-01-30"
.PP
(ixcobra) check if we are authenticated in publishNext before trying to publish a message
.SH "[8\&.0\&.2] - 2020-01-28"
.PP
Extract severity level when emitting messages to sentry
.SH "[8\&.0\&.1] - 2020-01-28"
.PP
Fix bug #151 - If a socket connection is interrupted, calling stop() on the IXWebSocket object blocks until the next retry
.SH "[8\&.0\&.0] - 2020-01-26"
.PP
(SocketServer) add ability to bind on an ipv6 address
.SH "[7\&.9\&.6] - 2020-01-22"
.PP
(ws) add a dnslookup sub-command, to get the ip address of a remote host
.SH "[7\&.9\&.5] - 2020-01-14"
.PP
(windows) fix #144, get rid of stubbed/un-implemented windows schannel ssl backend
.SH "[7\&.9\&.4] - 2020-01-12"
.PP
(openssl + mbedssl) fix #140, can send large files with ws send over ssl / still broken with apple ssl
.SH "[7\&.9\&.3] - 2020-01-10"
.PP
(apple ssl) model write method after the OpenSSL one for consistency
.SH "[7\&.9\&.2] - 2020-01-06"
.PP
(apple ssl) unify read and write ssl utility code
.SH "[7\&.9\&.1] - 2020-01-06"
.PP
(websocket client) better error propagation when errors are detected while sending data (ws send) detect failures to send big files, terminate in those cases and report error
.SH "[7\&.9\&.0] - 2020-01-04"
.PP
(ws send) add option (-x) to disable per message deflate compression
.SH "[7\&.8\&.9] - 2020-01-04"
.PP
(ws send + receive) handle all message types (ping + pong + fragment) / investigate #140
.SH "[7\&.8\&.8] - 2019-12-28"
.PP
(mbedtls) fix related to private key file parsing and initialization
.SH "[7\&.8\&.6] - 2019-12-28"
.PP
(ws cobra to sentry/statsd) fix for handling null events properly for empty queues + use queue to send data to statsd
.SH "[7\&.8\&.5] - 2019-12-28"
.PP
(ws cobra to sentry) handle null events for empty queues
.SH "[7\&.8\&.4] - 2019-12-27"
.PP
(ws cobra to sentry) game is picked in a fair manner, so that all games get the same share of sent events
.SH "[7\&.8\&.3] - 2019-12-27"
.PP
(ws cobra to sentry) refactor queue related code into a class
.SH "[7\&.8\&.2] - 2019-12-25"
.PP
(ws cobra to sentry) bound the queue size used to hold up cobra messages before they are sent to sentry\&. Default queue size is a 100 messages\&. Without such limit the program runs out of memory when a subscriber receive a lot of messages that cannot make it to sentry
.SH "[7\&.8\&.1] - 2019-12-25"
.PP
(ws client) use correct compilation defines so that spdlog is not used as a header only library (reduce binary size and increase compilation speed)
.SH "[7\&.8\&.0] - 2019-12-24"
.PP
(ws client) all commands use spdlog instead of std::cerr or std::cout for logging
.SH "[7\&.6\&.5] - 2019-12-24"
.PP
(cobra client) send a websocket ping every 30s to keep the connection opened
.SH "[7\&.6\&.4] - 2019-12-22"
.PP
(client) error handling, quote url in error case when failing to parse one (ws) ws_cobra_publish: register callbacks before connecting (doc) mention mbedtls in supported ssl server backend
.SH "[7\&.6\&.3] - 2019-12-20"
.PP
(tls) add a simple description of the TLS configuration routine for debugging
.SH "[7\&.6\&.2] - 2019-12-20"
.PP
(mbedtls) correct support for using own certificate and private key
.SH "[7\&.6\&.1] - 2019-12-20"
.PP
(ws commands) in websocket proxy, disable automatic reconnections + in Dockerfile, use alpine 3\&.11
.SH "[7\&.6\&.0] - 2019-12-19"
.PP
(cobra) Add TLS options to all cobra commands and classes\&. Add example to the doc\&.
.SH "[7\&.5\&.8] - 2019-12-18"
.PP
(cobra-to-sentry) capture application version from device field
.SH "[7\&.5\&.7] - 2019-12-18"
.PP
(tls) Experimental TLS server support with mbedtls (windows) + process cert tlsoption (client + server)
.SH "[7\&.5\&.6] - 2019-12-18"
.PP
(tls servers) Make it clear that apple ssl and mbedtls backends do not support SSL in server mode
.SH "[7\&.5\&.5] - 2019-12-17"
.PP
(tls options client) TLSOptions struct _validated member should be initialized to false
.SH "[7\&.5\&.4] - 2019-12-16"
.PP
(websocket client) improve the error message when connecting to a non websocket server
.PP
Before:
.PP
.PP
.nf
Connection error: Got bad status connecting to example\&.com:443, status: 200, HTTP Status line: HTTP/1\&.1 200 OK
.fi
.PP
.PP
After:
.PP
.PP
.nf
Connection error: Expecting status 101 (Switching Protocol), got 200 status connecting to example\&.com:443, HTTP Status line: HTTP/1\&.1 200 OK
.fi
.PP
.SH "[7\&.5\&.3] - 2019-12-12"
.PP
(server) attempt at fixing #131 by using blocking writes in server mode
.SH "[7\&.5\&.2] - 2019-12-11"
.PP
(ws) cobra to sentry - created events with sentry tags based on tags present in the cobra messages
.SH "[7\&.5\&.1] - 2019-12-06"
.PP
(mac) convert SSL errors to utf8
.SH "[7\&.5\&.0] - 2019-12-05"
.PP
.IP "\(bu" 2
(ws) cobra to sentry\&. Handle Error 429 Too Many Requests and politely wait before sending more data to sentry\&.
.PP
.PP
In the example below sentry we are sending data too fast, sentry asks us to slow down which we do\&. Notice how the sent count stop increasing, while we are waiting for 41 seconds\&.
.PP
.PP
.nf
[2019\-12\-05 15:50:33\&.759] [info] messages received 2449 sent 3
[2019\-12\-05 15:50:34\&.759] [info] messages received 5533 sent 7
[2019\-12\-05 15:50:35\&.759] [info] messages received 8612 sent 11
[2019\-12\-05 15:50:36\&.759] [info] messages received 11562 sent 15
[2019\-12\-05 15:50:37\&.759] [info] messages received 14410 sent 19
[2019\-12\-05 15:50:38\&.759] [info] messages received 17236 sent 23
[2019\-12\-05 15:50:39\&.282] [error] Error sending data to sentry: 429
[2019\-12\-05 15:50:39\&.282] [error] Body: {"exception":[{"stacktrace":{"frames":[{"filename":"WorldScene\&.lua","function":"WorldScene\&.lua:1935","lineno":1958},{"filename":"WorldScene\&.lua","function":"onUpdate_WorldCam","lineno":1921},{"filename":"WorldMapTile\&.lua","function":"__index","lineno":239}]},"value":"noisytypes: Attempt to call nil(nil,2224139838)!"}],"platform":"python","sdk":{"name":"ws","version":"1\&.0\&.0"},"tags":[["game","niso"],["userid","107638363"],["environment","live"]],"timestamp":"2019\-12\-05T23:50:39Z"}

[2019\-12\-05 15:50:39\&.282] [error] Response: {"error_name":"rate_limit","error":"Creation of this event was denied due to rate limiting"}
[2019\-12\-05 15:50:39\&.282] [warning] Error 429 \- Too Many Requests\&. ws will sleep and retry after 41 seconds
[2019\-12\-05 15:50:39\&.760] [info] messages received 18839 sent 25
[2019\-12\-05 15:50:40\&.760] [info] messages received 18839 sent 25
[2019\-12\-05 15:50:41\&.760] [info] messages received 18839 sent 25
[2019\-12\-05 15:50:42\&.761] [info] messages received 18839 sent 25
[2019\-12\-05 15:50:43\&.762] [info] messages received 18839 sent 25
[2019\-12\-05 15:50:44\&.763] [info] messages received 18839 sent 25
[2019\-12\-05 15:50:45\&.768] [info] messages received 18839 sent 25
.fi
.PP
.SH "[7\&.4\&.5] - 2019-12-03"
.PP
.IP "\(bu" 2
(ws) #125 / fix build problem when jsoncpp is not installed locally
.PP
.SH "[7\&.4\&.4] - 2019-12-03"
.PP
.IP "\(bu" 2
(ws) #125 / cmake detects an already installed jsoncpp and will try to use this one if present
.PP
.SH "[7\&.4\&.3] - 2019-12-03"
.PP
.IP "\(bu" 2
(http client) use std::unordered_map instead of std::map for HttpParameters and HttpFormDataParameters class aliases
.PP
.SH "[7\&.4\&.2] - 2019-12-02"
.PP
.IP "\(bu" 2
(client) internal IXDNSLookup class requires a valid cancellation request function callback to be passed in
.PP
.SH "[7\&.4\&.1] - 2019-12-02"
.PP
.IP "\(bu" 2
(client) fix an overflow in the exponential back off code
.PP
.SH "[7\&.4\&.0] - 2019-11-25"
.PP
.IP "\(bu" 2
(http client) Add support for multipart \fBHTTP\fP POST upload
.IP "\(bu" 2
(ixsentry) Add support for uploading a minidump to sentry
.PP
.SH "[7\&.3\&.5] - 2019-11-20"
.PP
.IP "\(bu" 2
On Darwin SSL, add ability to skip peer verification\&.
.PP
.SH "[7\&.3\&.4] - 2019-11-20"
.PP
.IP "\(bu" 2
32-bits compile fix, courtesy of @fcojavmc
.PP
.SH "[7\&.3\&.1] - 2019-11-16"
.PP
.IP "\(bu" 2
ws proxy_server / remote server close not forwarded to the client
.PP
.SH "[7\&.3\&.0] - 2019-11-15"
.PP
.IP "\(bu" 2
New ws command: \fCws proxy_server\fP\&.
.PP
.SH "[7\&.2\&.2] - 2019-11-01"
.PP
.IP "\(bu" 2
Tag a release + minor reformating\&.
.PP
.SH "[7\&.2\&.1] - 2019-10-26"
.PP
.IP "\(bu" 2
Add unittest to IXSentryClient to lua backtrace parsing code
.PP
.SH "[7\&.2\&.0] - 2019-10-24"
.PP
.IP "\(bu" 2
Add cobra_metrics_to_redis sub-command to create streams for each cobra metric event being received\&.
.PP
.SH "[7\&.1\&.0] - 2019-10-13"
.PP
.IP "\(bu" 2
Add client support for websocket subprotocol\&. Look for the new addSubProtocol method for details\&.
.PP
.SH "[7\&.0\&.0] - 2019-10-01"
.PP
.IP "\(bu" 2
TLS support in server code, only implemented for the OpenSSL SSL backend for now\&.
.PP
.SH "[6\&.3\&.4] - 2019-09-30"
.PP
.IP "\(bu" 2
all ws subcommands propagate tls options to servers (unimplemented) or ws or http client (implemented) (contributed by Matt DeBoer)
.PP
.SH "[6\&.3\&.3] - 2019-09-30"
.PP
.IP "\(bu" 2
ws has a --version option
.PP
.SH "[6\&.3\&.2] - 2019-09-29"
.PP
.IP "\(bu" 2
(http + websocket clients) can specify cacert and some other tls options (not implemented on all backend)\&. This makes it so that server certs can finally be validated on windows\&.
.PP
.SH "[6\&.3\&.1] - 2019-09-29"
.PP
.IP "\(bu" 2
Add ability to use OpenSSL on apple platforms\&.
.PP
.SH "[6\&.3\&.0] - 2019-09-28"
.PP
.IP "\(bu" 2
ixcobra / fix crash in CobraConnection::publishNext when the queue is empty + handle CobraConnection_PublishMode_Batch in CobraMetricsThreadedPublisher
.PP
.SH "[6\&.2\&.9] - 2019-09-27"
.PP
.IP "\(bu" 2
mbedtls fixes / the unittest now pass on macOS, and hopefully will on Windows/AppVeyor as well\&.
.PP
.SH "[6\&.2\&.8] - 2019-09-26"
.PP
.IP "\(bu" 2
Http server: add options to ws https to redirect all requests to a given url\&. POST requests will get a 200 and an empty response\&.
.PP
.PP
.PP
.nf
ws httpd \-L \-\-redirect_url https://www\&.google\&.com
.fi
.PP
.SH "[6\&.2\&.7] - 2019-09-25"
.PP
.IP "\(bu" 2
Stop having ws send subcommand send a binary message in text mode, which would cause error in \fCmake ws_test\fP shell script test\&.
.PP
.SH "[6\&.2\&.6] - 2019-09-24"
.PP
.IP "\(bu" 2
Fix 2 race conditions detected with TSan, one in CobraMetricsPublisher::push and another one in WebSocketTransport::sendData (that one was bad)\&.
.PP
.SH "[6\&.2\&.5] - 2019-09-23"
.PP
.IP "\(bu" 2
Add simple Redis Server which is only capable of doing publish / subscribe\&. New ws redis_server sub-command to use it\&. The server is used in the unittest, so that we can run on CI in environment where redis isn not available like github actions env\&.
.PP
.SH "[6\&.2\&.4] - 2019-09-22"
.PP
.IP "\(bu" 2
Add options to configure TLS ; contributed by Matt DeBoer\&. Only implemented for OpenSSL TLS backend for now\&.
.PP
.SH "[6\&.2\&.3] - 2019-09-21"
.PP
.IP "\(bu" 2
Fix crash in the Linux unittest in the \fBHTTP\fP client code, in Socket::readBytes
.IP "\(bu" 2
Cobra Metrics Publisher code returns the message id of the message that got published, to be used to validated that it got sent properly when receiving an ack\&.
.PP
.SH "[6\&.2\&.2] - 2019-09-19"
.PP
.IP "\(bu" 2
In DNS lookup code, make sure the weak pointer we use lives through the expected scope (if branch)
.PP
.SH "[6\&.2\&.1] - 2019-09-17"
.PP
.IP "\(bu" 2
On error while doing a client handshake, additionally display port number next to the host name
.PP
.SH "[6\&.2\&.0] - 2019-09-09"
.PP
.IP "\(bu" 2
websocket and http server: server does not close the bound client socket in many cases
.IP "\(bu" 2
improve some websocket error messages
.IP "\(bu" 2
add a utility function with unittest to parse status line and stop using scanf which triggers warnings on Windows
.IP "\(bu" 2
update ws CLI11 (our command line argument parsing library) to the latest, which fix a compiler bug about optional
.PP
.SH "[6\&.1\&.0] - 2019-09-08"
.PP
.IP "\(bu" 2
move poll wrapper on top of select (only used on Windows) to the ix namespace
.PP
.SH "[6\&.0\&.1] - 2019-09-05"
.PP
.IP "\(bu" 2
add cobra metrics publisher + server unittest
.IP "\(bu" 2
add cobra client + server unittest
.IP "\(bu" 2
ws snake (cobra simple server) add basic support for unsubscription + subscribe send the proper subscription data + redis client subscription can be cancelled
.IP "\(bu" 2
IXCobraConnection / pdu handlers can crash if they receive json data which is not an object
.PP
.SH "[6\&.0\&.0] - 2019-09-04"
.PP
.IP "\(bu" 2
all client autobahn test should pass !
.IP "\(bu" 2
zlib/deflate has a bug with windowsbits == 8, so we silently upgrade it to 9/ (fix autobahn test 13\&.X which uses 8 for the windows size)
.PP
.SH "[5\&.2\&.0] - 2019-09-04"
.PP
.IP "\(bu" 2
Fragmentation: for sent messages which are compressed, the continuation fragments should not have the rsv1 bit set (fix all autobahn tests for zlib compression 12\&.X)
.IP "\(bu" 2
Websocket Server / do a case insensitive string search when looking for an Upgrade header whose value is websocket\&. (some client use WebSocket with some upper-case characters)
.PP
.SH "[5\&.1\&.9] - 2019-09-03"
.PP
.IP "\(bu" 2
ws autobahn / report progress with spdlog::info to get timing info
.IP "\(bu" 2
ws autobahn / use condition variables for stopping test case + add more logging on errors
.PP
.SH "[5\&.1\&.8] - 2019-09-03"
.PP
.IP "\(bu" 2
Per message deflate/compression: handle fragmented messages (fix autobahn test: 12\&.1\&.X and probably others)
.PP
.SH "[5\&.1\&.7] - 2019-09-03"
.PP
.IP "\(bu" 2
Receiving invalid UTF-8 TEXT message should fail and close the connection (fix remaining autobahn test: 6\&.X UTF-8 Handling)
.PP
.SH "[5\&.1\&.6] - 2019-09-03"
.PP
.IP "\(bu" 2
Sending invalid UTF-8 TEXT message should fail and close the connection (fix remaining autobahn test: 6\&.X UTF-8 Handling)
.IP "\(bu" 2
Fix failing unittest which was sending binary data in text mode with WebSocket::send to call properly call WebSocket::sendBinary instead\&.
.IP "\(bu" 2
Validate that the reason is proper utf-8\&. (fix autobahn test 7\&.5\&.1)
.IP "\(bu" 2
Validate close codes\&. Autobahn 7\&.9\&.*
.PP
.SH "[5\&.1\&.5] - 2019-09-03"
.PP
Framentation: data and continuation blocks received out of order (fix autobahn test: 5\&.9 through 5\&.20 Fragmentation)
.SH "[5\&.1\&.4] - 2019-09-03"
.PP
Sending invalid UTF-8 TEXT message should fail and close the connection (fix \fBtons\fP of autobahn test: 6\&.X UTF-8 Handling)
.SH "[5\&.1\&.3] - 2019-09-03"
.PP
Message type (TEXT or BINARY) is invalid for received fragmented messages (fix autobahn test: 5\&.3 through 5\&.8 Fragmentation)
.SH "[5\&.1\&.2] - 2019-09-02"
.PP
Ping and Pong messages cannot be fragmented (fix autobahn test: 5\&.1 and 5\&.2 Fragmentation)
.SH "[5\&.1\&.1] - 2019-09-01"
.PP
Close connections when reserved bits are used (fix autobahn test: 3\&.X Reserved Bits)
.SH "[5\&.1\&.0] - 2019-08-31"
.PP
.IP "\(bu" 2
ws autobahn / Add code to test websocket client compliance with the autobahn test-suite
.IP "\(bu" 2
add utf-8 validation code, not hooked up properly yet
.IP "\(bu" 2
Ping received with a payload too large (> 125 bytes) trigger a connection closure
.IP "\(bu" 2
cobra / add tracking about published messages
.IP "\(bu" 2
cobra / publish returns a message id, that can be used when
.IP "\(bu" 2
cobra / new message type in the message received handler when publish/ok is received (can be used to implement an ack system)\&.
.PP
.SH "[5\&.0\&.9] - 2019-08-30"
.PP
.IP "\(bu" 2
User-Agent header is set when not specified\&.
.IP "\(bu" 2
New option to cap the max wait between reconnection attempts\&. Still default to 10s\&. (setMaxWaitBetweenReconnectionRetries)\&.
.PP
.PP
.PP
.nf
ws connect \-\-max_wait 5000 ws://example\&.com # will only wait 5 seconds max between reconnection attempts
.fi
.PP
.SH "[5\&.0\&.7] - 2019-08-23"
.PP
.IP "\(bu" 2
WebSocket: add new option to pass in extra \fBHTTP\fP headers when connecting\&.
.IP "\(bu" 2
\fCws connect\fP add new option (-H, works like \fCcurl\fP) to pass in extra \fBHTTP\fP headers when connecting
.PP
.PP
If you run against \fCws echo_server\fP you will see the headers being received printed in the terminal\&. 
.PP
.nf
ws connect \-H "foo: bar" \-H "baz: buz" ws://127\&.0\&.0\&.1:8008

.fi
.PP
.PP
.IP "\(bu" 2
CobraConnection: sets a unique id field for all messages sent to \fCcobra\fP\&.
.IP "\(bu" 2
CobraConnection: sets a counter as a field for each event published\&.
.PP
.SH "[5\&.0\&.6] - 2019-08-22"
.PP
.IP "\(bu" 2
Windows: silly compile error (poll should be in the global namespace)
.PP
.SH "[5\&.0\&.5] - 2019-08-22"
.PP
.IP "\(bu" 2
Windows: use select instead of WSAPoll, through a poll wrapper
.PP
.SH "[5\&.0\&.4] - 2019-08-20"
.PP
.IP "\(bu" 2
Windows build fixes (there was a problem with the use of ::poll that has a different name on Windows (WSAPoll))
.PP
.SH "[5\&.0\&.3] - 2019-08-14"
.PP
.IP "\(bu" 2
CobraMetricThreadedPublisher _enable flag is an atomic, and CobraMetricsPublisher is enabled by default
.PP
.SH "[5\&.0\&.2] - 2019-08-01"
.PP
.IP "\(bu" 2
ws cobra_subscribe has a new -q (quiet) option
.IP "\(bu" 2
ws cobra_subscribe knows to and display msg stats (count and # of messages received per second)
.IP "\(bu" 2
ws cobra_subscribe, cobra_to_statsd and cobra_to_sentry commands have a new option, --filter to restrict the events they want to receive
.PP
.SH "[5\&.0\&.1] - 2019-07-25"
.PP
.IP "\(bu" 2
ws connect command has a new option to send in binary mode (still default to text)
.IP "\(bu" 2
ws connect command has readline history thanks to libnoise-cpp\&. Now ws connect one can use using arrows to lookup previous sent messages and edit them
.PP
.SH "[5\&.0\&.0] - 2019-06-23"
.PP
.SS "Changed"
.IP "\(bu" 2
New \fBHTTP\fP server / still very early\&. ws gained a new command, httpd can run a simple webserver serving local files\&.
.IP "\(bu" 2
IXDNSLookup\&. Uses weak pointer + smart_ptr + shared_from_this instead of static sets + mutex to handle object going away before dns lookup has resolved
.IP "\(bu" 2
cobra_to_sentry / backtraces are reversed and line number is not extracted correctly
.IP "\(bu" 2
mbedtls and zlib are searched with find_package, and we use the vendored version if nothing is found
.IP "\(bu" 2
travis CI uses g++ on Linux
.PP
.SH "[4\&.0\&.0] - 2019-06-09"
.PP
.SS "Changed"
.IP "\(bu" 2
WebSocket::send() sends message in TEXT mode by default
.IP "\(bu" 2
WebSocketMessage sets a new binary field, which tells whether the received incoming message is binary or text
.IP "\(bu" 2
WebSocket::send takes a third arg, binary which default to true (can be text too)
.IP "\(bu" 2
WebSocket callback only take one object, a const ix::WebSocketMessagePtr& msg
.IP "\(bu" 2
Add explicit WebSocket::sendBinary method
.IP "\(bu" 2
New headers + WebSocketMessage class to hold message data, still not used across the board
.IP "\(bu" 2
Add test/compatibility folder with small servers and clients written in different languages and different libraries to test compatibility\&.
.IP "\(bu" 2
ws echo_server has a -g option to print a greeting message on connect
.IP "\(bu" 2
IXSocketMbedTLS: better error handling in close and connect
.PP
.SH "[3\&.1\&.2] - 2019-06-06"
.PP
.SS "Added"
.IP "\(bu" 2
ws connect has a -x option to disable per message deflate
.IP "\(bu" 2
Add WebSocket::disablePerMessageDeflate() option\&.
.PP
.SH "[3\&.0\&.0] - 2019-06-xx"
.PP
.SS "Changed"
.IP "\(bu" 2
TLS, aka SSL works on Windows (websocket and http clients)
.IP "\(bu" 2
ws command line tool build on Windows
.IP "\(bu" 2
Async API for HttpClient
.IP "\(bu" 2
HttpClient API changed to use shared_ptr for response and request 
.PP

