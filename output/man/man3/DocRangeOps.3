.TH "DocRangeOps" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DocRangeOps
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBtesting::Test\fP\&.
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "bool \fBexpect_layer\fP (\fBLayer\fP *expected_layer, layer_t layer)"
.br
.ti -1c
.RI "bool \fBexpect_frame\fP (layer_t expected_frame, frame_t frame)"
.br
.ti -1c
.RI "bool \fBexpect_layer_frame\fP (layer_t expected_layer, frame_t expected_frame, layer_t layer, frame_t frame)"
.br
.ti -1c
.RI "bool \fBexpect_cel\fP (layer_t expected_layer, frame_t expected_frame, layer_t layer, frame_t frame)"
.br
.ti -1c
.RI "bool \fBexpect_empty_cel\fP (layer_t layer, frame_t frame)"
.br
.ti -1c
.RI "\fBDocRange\fP \fBrange\fP (\fBLayer\fP *fromLayer, frame_t fromFrNum, \fBLayer\fP *toLayer, frame_t toFrNum, DocRange::Type type)"
.br
.ti -1c
.RI "\fBDocRange\fP \fBrange\fP (layer_t fromLayer, frame_t fromFrNum, layer_t toLayer, frame_t toFrNum, DocRange::Type type)"
.br
.ti -1c
.RI "\fBDocRange\fP \fBlayers_range\fP (\fBLayer\fP *fromLayer, \fBLayer\fP *toLayer)"
.br
.ti -1c
.RI "\fBDocRange\fP \fBlayers_range\fP (layer_t fromLayer, layer_t toLayer)"
.br
.ti -1c
.RI "\fBDocRange\fP \fBlayers_range\fP (\fBLayer\fP *layer)"
.br
.ti -1c
.RI "\fBDocRange\fP \fBlayers_range\fP (layer_t layer)"
.br
.ti -1c
.RI "\fBDocRange\fP \fBframes_range\fP (frame_t fromFrame, frame_t toFrame)"
.br
.ti -1c
.RI "\fBDocRange\fP \fBframes_range\fP (frame_t frame)"
.br
.ti -1c
.RI "\fBDocRange\fP \fBcels_range\fP (layer_t fromLayer, frame_t fromFrNum, layer_t toLayer, frame_t toFrNum)"
.br
.in -1c

Protected Member Functions inherited from \fBtesting::Test\fP
.in +1c
.ti -1c
.RI "virtual void \fBSetUp\fP ()"
.br
.ti -1c
.RI "virtual void \fBTearDown\fP ()"
.br
.ti -1c
.RI "virtual void \fBSetUp\fP ()"
.br
.ti -1c
.RI "virtual void \fBTearDown\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBTestContextT\fP< \fBapp::Context\fP > \fBctx\fP"
.br
.ti -1c
.RI "DocPtr \fBdoc\fP"
.br
.ti -1c
.RI "\fBSprite\fP * \fBsprite\fP"
.br
.ti -1c
.RI "\fBLayerImage\fP * \fBlayer1\fP"
.br
.ti -1c
.RI "\fBLayerImage\fP * \fBlayer2\fP"
.br
.ti -1c
.RI "\fBLayerImage\fP * \fBlayer3\fP"
.br
.ti -1c
.RI "\fBLayerImage\fP * \fBlayer4\fP"
.br
.ti -1c
.RI "\fBcolor_t\fP \fBexpected_color\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Static Public Member Functions inherited from \fBtesting::Test\fP
.in +1c
.ti -1c
.RI "static void \fBSetUpTestSuite\fP ()"
.br
.ti -1c
.RI "static void \fBTearDownTestSuite\fP ()"
.br
.ti -1c
.RI "static void \fBTearDownTestCase\fP ()"
.br
.ti -1c
.RI "static void \fBSetUpTestCase\fP ()"
.br
.ti -1c
.RI "static bool \fBHasFatalFailure\fP ()"
.br
.ti -1c
.RI "static bool \fBHasNonfatalFailure\fP ()"
.br
.ti -1c
.RI "static bool \fBIsSkipped\fP ()"
.br
.ti -1c
.RI "static bool \fBHasFailure\fP ()"
.br
.ti -1c
.RI "static void \fBRecordProperty\fP (const std::string &key, const std::string &\fBvalue\fP)"
.br
.ti -1c
.RI "static void \fBRecordProperty\fP (const std::string &key, int64_t \fBvalue\fP)"
.br
.ti -1c
.RI "static void \fBSetUpTestSuite\fP ()"
.br
.ti -1c
.RI "static void \fBTearDownTestSuite\fP ()"
.br
.ti -1c
.RI "static void \fBTearDownTestCase\fP ()"
.br
.ti -1c
.RI "static void \fBSetUpTestCase\fP ()"
.br
.ti -1c
.RI "static bool \fBHasFatalFailure\fP ()"
.br
.ti -1c
.RI "static bool \fBHasNonfatalFailure\fP ()"
.br
.ti -1c
.RI "static bool \fBIsSkipped\fP ()"
.br
.ti -1c
.RI "static bool \fBHasFailure\fP ()"
.br
.ti -1c
.RI "static void \fBRecordProperty\fP (const std::string &key, const std::string &\fBvalue\fP)"
.br
.ti -1c
.RI "static void \fBRecordProperty\fP (const std::string &key, int \fBvalue\fP)"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
