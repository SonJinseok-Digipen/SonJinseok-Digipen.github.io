.TH "hb_concat_iter_t< A, B >" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hb_concat_iter_t< A, B >
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBhb_iter_t< hb_concat_iter_t< A, B >, A::item_t >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef A::item_t \fB__item_t__\fP"
.br
.in -1c

Public Types inherited from \fBhb_iter_t< hb_concat_iter_t< A, B >, A::item_t >\fP
.in +1c
.ti -1c
.RI "typedef A::item_t \fBitem_t\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBhb_concat_iter_t\fP (\fBA\fP &\fBa\fP, B &b)"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP (const \fBA\fP &\fBa\fP, const B &b)"
.br
.ti -1c
.RI "__item_t__ \fB__item__\fP () const"
.br
.ti -1c
.RI "__item_t__ \fB__item_at__\fP (unsigned i) const"
.br
.ti -1c
.RI "bool \fB__more__\fP () const"
.br
.ti -1c
.RI "unsigned \fB__len__\fP () const"
.br
.ti -1c
.RI "void \fB__next__\fP ()"
.br
.ti -1c
.RI "void \fB__forward__\fP (unsigned n)"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP \fB__end__\fP () const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBhb_concat_iter_t\fP &o) const"
.br
.in -1c

Public Member Functions inherited from \fBhb_iter_t< hb_concat_iter_t< A, B >, A::item_t >\fP
.in +1c
.ti -1c
.RI "constexpr unsigned \fBget_item_size\fP () const"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBiter\fP () const"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator+\fP () const"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator+\fP (unsigned count) const"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBbegin\fP () const"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBend\fP () const"
.br
.ti -1c
.RI "\fBoperator bool\fP () const"
.br
.ti -1c
.RI "unsigned \fBlen\fP () const"
.br
.ti -1c
.RI "hb_remove_reference< item_t > * \fBoperator\->\fP () const"
.br
.ti -1c
.RI "item_t \fBoperator*\fP () const"
.br
.ti -1c
.RI "item_t \fBoperator*\fP ()"
.br
.ti -1c
.RI "item_t \fBoperator[]\fP (unsigned i) const"
.br
.ti -1c
.RI "item_t \fBoperator[]\fP (unsigned i)"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > & \fBoperator+=\fP (unsigned count) &"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator+=\fP (unsigned count) &&"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > & \fBoperator++\fP () &"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator++\fP () &&"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > & \fBoperator\-=\fP (unsigned count) &"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator\-=\fP (unsigned count) &&"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > & \fBoperator\-\-\fP () &"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator\-\-\fP () &&"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator\-\fP (unsigned count) const"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > & \fBoperator>>\fP (T &v) &"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator>>\fP (T &v) &&"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > & \fBoperator<<\fP (const T v) &"
.br
.ti -1c
.RI "\fBhb_concat_iter_t\fP< \fBA\fP, B > \fBoperator<<\fP (const T v) &&"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr bool \fBis_random_access_iterator\fP"
.br
.ti -1c
.RI "static constexpr bool \fBis_sorted_iterator\fP = false"
.br
.in -1c

Static Public Attributes inherited from \fBhb_iter_t< hb_concat_iter_t< A, B >, A::item_t >\fP
.in +1c
.ti -1c
.RI "static constexpr bool \fBis_iterator\fP"
.br
.ti -1c
.RI "static constexpr bool \fBis_random_access_iterator\fP"
.br
.ti -1c
.RI "static constexpr bool \fBis_sorted_iterator\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Member Functions inherited from \fBhb_iter_t< hb_concat_iter_t< A, B >, A::item_t >\fP
.in +1c
.ti -1c
.RI "\fBhb_iter_t\fP (const \fBhb_iter_t\fP &o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_t\fP (\fBhb_iter_t\fP &&o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_t\fP & \fBoperator=\fP (const \fBhb_iter_t\fP &o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_t\fP & \fBoperator=\fP (\fBhb_iter_t\fP &&o HB_UNUSED)=default"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "template<typename \fBA\fP , typename B > constexpr bool \fBhb_concat_iter_t\fP< \fBA\fP, B >::is_random_access_iterator\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP.PP
.nf
=
    A::is_random_access_iterator &&
    B::is_random_access_iterator
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
