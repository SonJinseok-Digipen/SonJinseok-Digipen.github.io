.TH "hb_font_t" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hb_font_t
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "int64_t \fBdir_mult\fP (hb_direction_t direction)"
.br
.ti -1c
.RI "hb_position_t \fBem_scale_x\fP (int16_t v)"
.br
.ti -1c
.RI "hb_position_t \fBem_scale_y\fP (int16_t v)"
.br
.ti -1c
.RI "hb_position_t \fBem_scalef_x\fP (float v)"
.br
.ti -1c
.RI "hb_position_t \fBem_scalef_y\fP (float v)"
.br
.ti -1c
.RI "float \fBem_fscale_x\fP (int16_t v)"
.br
.ti -1c
.RI "float \fBem_fscale_y\fP (int16_t v)"
.br
.ti -1c
.RI "float \fBem_fscalef_x\fP (float v)"
.br
.ti -1c
.RI "float \fBem_fscalef_y\fP (float v)"
.br
.ti -1c
.RI "hb_position_t \fBem_scale_dir\fP (int16_t v, hb_direction_t direction)"
.br
.ti -1c
.RI "hb_position_t \fBparent_scale_x_distance\fP (hb_position_t v)"
.br
.ti -1c
.RI "hb_position_t \fBparent_scale_y_distance\fP (hb_position_t v)"
.br
.ti -1c
.RI "hb_position_t \fBparent_scale_x_position\fP (hb_position_t v)"
.br
.ti -1c
.RI "hb_position_t \fBparent_scale_y_position\fP (hb_position_t v)"
.br
.ti -1c
.RI "void \fBparent_scale_distance\fP (hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBparent_scale_position\fP (hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "HB_INTERNAL bool \fBhas_func\fP (unsigned int i)"
.br
.ti -1c
.RI "HB_INTERNAL bool \fBhas_func_set\fP (unsigned int i)"
.br
.ti -1c
.RI "HB_FONT_FUNCS_IMPLEMENT_CALLBACKS hb_bool_t \fBget_font_h_extents\fP (\fBhb_font_extents_t\fP *extents)"
.br
.ti -1c
.RI "hb_bool_t \fBget_font_v_extents\fP (\fBhb_font_extents_t\fP *extents)"
.br
.ti -1c
.RI "bool \fBhas_glyph\fP (hb_codepoint_t unicode)"
.br
.ti -1c
.RI "hb_bool_t \fBget_nominal_glyph\fP (hb_codepoint_t unicode, hb_codepoint_t *glyph, hb_codepoint_t not_found=0)"
.br
.ti -1c
.RI "unsigned int \fBget_nominal_glyphs\fP (unsigned int count, const hb_codepoint_t *first_unicode, unsigned int unicode_stride, hb_codepoint_t *first_glyph, unsigned int glyph_stride)"
.br
.ti -1c
.RI "hb_bool_t \fBget_variation_glyph\fP (hb_codepoint_t unicode, hb_codepoint_t variation_selector, hb_codepoint_t *glyph, hb_codepoint_t not_found=0)"
.br
.ti -1c
.RI "hb_position_t \fBget_glyph_h_advance\fP (hb_codepoint_t glyph)"
.br
.ti -1c
.RI "hb_position_t \fBget_glyph_v_advance\fP (hb_codepoint_t glyph)"
.br
.ti -1c
.RI "void \fBget_glyph_h_advances\fP (unsigned int count, const hb_codepoint_t *first_glyph, unsigned int glyph_stride, hb_position_t *first_advance, unsigned int advance_stride)"
.br
.ti -1c
.RI "void \fBget_glyph_v_advances\fP (unsigned int count, const hb_codepoint_t *first_glyph, unsigned int glyph_stride, hb_position_t *first_advance, unsigned int advance_stride)"
.br
.ti -1c
.RI "hb_bool_t \fBget_glyph_h_origin\fP (hb_codepoint_t glyph, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "hb_bool_t \fBget_glyph_v_origin\fP (hb_codepoint_t glyph, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "hb_position_t \fBget_glyph_h_kerning\fP (hb_codepoint_t left_glyph, hb_codepoint_t right_glyph)"
.br
.ti -1c
.RI "hb_position_t \fBget_glyph_v_kerning\fP (hb_codepoint_t top_glyph, hb_codepoint_t bottom_glyph)"
.br
.ti -1c
.RI "hb_bool_t \fBget_glyph_extents\fP (hb_codepoint_t glyph, \fBhb_glyph_extents_t\fP *extents)"
.br
.ti -1c
.RI "hb_bool_t \fBget_glyph_contour_point\fP (hb_codepoint_t glyph, unsigned int point_index, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "hb_bool_t \fBget_glyph_name\fP (hb_codepoint_t glyph, char *name, unsigned int size)"
.br
.ti -1c
.RI "hb_bool_t \fBget_glyph_from_name\fP (const char *name, int len, hb_codepoint_t *glyph)"
.br
.ti -1c
.RI "void \fBget_glyph_shape\fP (hb_codepoint_t glyph, \fBhb_draw_funcs_t\fP *draw_funcs, void *draw_data)"
.br
.ti -1c
.RI "void \fBget_h_extents_with_fallback\fP (\fBhb_font_extents_t\fP *extents)"
.br
.ti -1c
.RI "void \fBget_v_extents_with_fallback\fP (\fBhb_font_extents_t\fP *extents)"
.br
.ti -1c
.RI "void \fBget_extents_for_direction\fP (hb_direction_t direction, \fBhb_font_extents_t\fP *extents)"
.br
.ti -1c
.RI "void \fBget_glyph_advance_for_direction\fP (hb_codepoint_t glyph, hb_direction_t direction, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBget_glyph_advances_for_direction\fP (hb_direction_t direction, unsigned int count, const hb_codepoint_t *first_glyph, unsigned glyph_stride, hb_position_t *first_advance, unsigned advance_stride)"
.br
.ti -1c
.RI "void \fBguess_v_origin_minus_h_origin\fP (hb_codepoint_t glyph, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBget_glyph_h_origin_with_fallback\fP (hb_codepoint_t glyph, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBget_glyph_v_origin_with_fallback\fP (hb_codepoint_t glyph, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBget_glyph_origin_for_direction\fP (hb_codepoint_t glyph, hb_direction_t direction, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBadd_glyph_h_origin\fP (hb_codepoint_t glyph, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBadd_glyph_v_origin\fP (hb_codepoint_t glyph, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBadd_glyph_origin_for_direction\fP (hb_codepoint_t glyph, hb_direction_t direction, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBsubtract_glyph_h_origin\fP (hb_codepoint_t glyph, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBsubtract_glyph_v_origin\fP (hb_codepoint_t glyph, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBsubtract_glyph_origin_for_direction\fP (hb_codepoint_t glyph, hb_direction_t direction, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBget_glyph_kerning_for_direction\fP (hb_codepoint_t first_glyph, hb_codepoint_t second_glyph, hb_direction_t direction, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "hb_bool_t \fBget_glyph_extents_for_origin\fP (hb_codepoint_t glyph, hb_direction_t direction, \fBhb_glyph_extents_t\fP *extents)"
.br
.ti -1c
.RI "hb_bool_t \fBget_glyph_contour_point_for_origin\fP (hb_codepoint_t glyph, unsigned int point_index, hb_direction_t direction, hb_position_t *x, hb_position_t *y)"
.br
.ti -1c
.RI "void \fBglyph_to_string\fP (hb_codepoint_t glyph, char *s, unsigned int size)"
.br
.ti -1c
.RI "hb_bool_t \fBglyph_from_string\fP (const char *s, int len, hb_codepoint_t *glyph)"
.br
.ti -1c
.RI "void \fBmults_changed\fP ()"
.br
.ti -1c
.RI "hb_position_t \fBem_mult\fP (int16_t v, int64_t mult)"
.br
.ti -1c
.RI "hb_position_t \fBem_scalef\fP (float v, int scale)"
.br
.ti -1c
.RI "float \fBem_fscalef\fP (float v, int scale)"
.br
.ti -1c
.RI "float \fBem_fscale\fP (int16_t v, int scale)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBhb_object_header_t\fP \fBheader\fP"
.br
.ti -1c
.RI "\fBhb_font_t\fP * \fBparent\fP"
.br
.ti -1c
.RI "\fBhb_face_t\fP * \fBface\fP"
.br
.ti -1c
.RI "int32_t \fBx_scale\fP"
.br
.ti -1c
.RI "int32_t \fBy_scale\fP"
.br
.ti -1c
.RI "float \fBslant\fP"
.br
.ti -1c
.RI "float \fBslant_xy\fP"
.br
.ti -1c
.RI "int64_t \fBx_mult\fP"
.br
.ti -1c
.RI "int64_t \fBy_mult\fP"
.br
.ti -1c
.RI "unsigned int \fBx_ppem\fP"
.br
.ti -1c
.RI "unsigned int \fBy_ppem\fP"
.br
.ti -1c
.RI "float \fBptem\fP"
.br
.ti -1c
.RI "unsigned int \fBnum_coords\fP"
.br
.ti -1c
.RI "int * \fBcoords\fP"
.br
.ti -1c
.RI "float * \fBdesign_coords\fP"
.br
.ti -1c
.RI "\fBhb_font_funcs_t\fP * \fBklass\fP"
.br
.ti -1c
.RI "void * \fBuser_data\fP"
.br
.ti -1c
.RI "hb_destroy_func_t \fBdestroy\fP"
.br
.ti -1c
.RI "\fBhb_shaper_object_dataset_t\fP< \fBhb_font_t\fP > \fBdata\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
