.TH "hb_glyph_info_t" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hb_glyph_info_t
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <hb\-buffer\&.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "hb_codepoint_t \fBcodepoint\fP"
.br
.ti -1c
.RI "hb_mask_t \fBmask\fP"
.br
.ti -1c
.RI "uint32_t \fBcluster\fP"
.br
.ti -1c
.RI "\fBhb_var_int_t\fP \fBvar1\fP"
.br
.ti -1c
.RI "\fBhb_var_int_t\fP \fBvar2\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBhb_glyph_info_t\fP: @codepoint: either a Unicode code point (before shaping) or a glyph index (after shaping)\&. @cluster: the index of the character in the original text that corresponds to this \fBhb_glyph_info_t\fP, or whatever the client passes to hb_buffer_add()\&. More than one \fBhb_glyph_info_t\fP can have the same @cluster value, if they resulted from the same character (e\&.g\&. one to many glyph substitution), and when more than one character gets merged in the same glyph (e\&.g\&. many to one glyph substitution) the \fBhb_glyph_info_t\fP will have the smallest cluster value of them\&. By default some characters are merged into the same cluster (e\&.g\&. combining marks have the same cluster as their bases) even if they are separate glyphs, hb_buffer_set_cluster_level() allow selecting more fine-grained cluster handling\&.
.PP
The \fBhb_glyph_info_t\fP is the structure that holds information about the glyphs and their relation to input text\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
