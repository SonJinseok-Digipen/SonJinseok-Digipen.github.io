.TH "md__tor__browser__browser__tor_browser__docs_snowflake__r_e_a_d_m_e" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__tor__browser__browser__tor_browser__docs_snowflake__r_e_a_d_m_e \- Snowflake 
.PP
\fC\fP
.PP
Pluggable Transport using WebRTC, inspired by Flashproxy\&.
.PP
\fB\fBTable\fP of Contents\fP
.PP
.IP "\(bu" 2
\fBStructure of this Repository\fP
.IP "\(bu" 2
\fBUsage\fP
.IP "  \(bu" 4
\fBUsing Snowflake with Tor\fP
.IP "  \(bu" 4
\fBRunning a Snowflake Proxy\fP
.IP "  \(bu" 4
\fBUsing the Snowflake Library with Other Applications\fP
.PP

.IP "\(bu" 2
\fBTest Environment\fP
.IP "\(bu" 2
\fBFAQ\fP
.IP "\(bu" 2
\fBMore info and links\fP
.PP
.SS "Structure of this Repository"
.IP "\(bu" 2
\fCbroker/\fP contains code for the Snowflake broker
.IP "\(bu" 2
\fCdoc/\fP contains Snowflake documentation and manpages
.IP "\(bu" 2
\fCclient/\fP contains the Tor pluggable transport client and client library code
.IP "\(bu" 2
\fCcommon/\fP contains generic libraries used by multiple pieces of Snowflake
.IP "\(bu" 2
\fCproxy/\fP contains code for the Go standalone Snowflake proxy
.IP "\(bu" 2
\fCprobetest/\fP contains code for a NAT probetesting service
.IP "\(bu" 2
\fCserver/\fP contains the Tor pluggable transport server and server library code
.PP
.SS "Usage"
Snowflake is currently deployed as a pluggable transport for Tor\&.
.SS "Using Snowflake with Tor"
To use the Snowflake client with Tor, you will need to add the appropriate \fCBridge\fP and \fCClientTransportPlugin\fP lines to your \fCtorrc\fP file\&. See the [client README](client) for more information on building and running the Snowflake client\&.
.SS "Running a Snowflake Proxy"
You can contribute to Snowflake by running a Snowflake proxy\&. We have the option to run a proxy in your browser or as a standalone Go program\&. See our \fCcommunity documentation\fP for more details\&.
.SS "Using the Snowflake Library with Other Applications"
Snowflake can be used as a Go API, and adheres to the [v2\&.1 pluggable transports specification]()\&. For more information on using the Snowflake Go library, see the \fBSnowflake library documentation\fP\&.
.SS "Test Environment"
There is a Docker-based test environment at https://github.com/cohosh/snowbox\&.
.SS "FAQ"
\fBQ: How does it work?\fP
.PP
In the Tor use-case:
.PP
.IP "1." 4
Volunteers visit websites which host the 'snowflake' proxy\&. (just like flashproxy)
.IP "2." 4
Tor clients automatically find available browser proxies via the Broker (the domain fronted signaling channel)\&.
.IP "3." 4
Tor client and browser proxy establish a WebRTC peer connection\&.
.IP "4." 4
Proxy connects to some relay\&.
.IP "5." 4
Tor occurs\&.
.PP
.PP
More detailed information about how clients, snowflake proxies, and the Broker fit together on the way\&.\&.\&.
.PP
\fBQ: What are the benefits of this PT compared with other PTs?\fP
.PP
Snowflake combines the advantages of flashproxy and meek\&. Primarily:
.PP
.IP "\(bu" 2
It has the convenience of Meek, but can support magnitudes more users with negligible CDN costs\&. (Domain fronting is only used for brief signalling / NAT-piercing to setup the P2P WebRTC DataChannels which handle the actual traffic\&.)
.IP "\(bu" 2
Arbitrarily high numbers of volunteer proxies are possible like in flashproxy, but NATs are no longer a usability barrier - no need for manual port forwarding!
.PP
.PP
\fBQ: Why is this called Snowflake?\fP
.PP
It utilizes the 'ICE' negotiation via WebRTC, and also involves a great abundance of ephemeral and short-lived (and special!) volunteer proxies\&.\&.\&.
.SS "More info and links"
We have more documentation in the \fCSnowflake wiki\fP and at https://snowflake.torproject.org/\&.
.SS "&ndash; Android AAR Reproducible Build Setup  &ndash;"
Using \fCgomobile\fP it is possible to build snowflake as shared libraries for all the architectures supported by Android\&. This is in the _\&.gitlab-ci\&.yml_, which runs in GitLab CI\&. It is also possible to run this setup in a Virtual Machine using \fCvagrant\fP\&. Just run \fCvagrant up\fP and it will create and provision the VM\&. \fCvagrant ssh\fP to get into the VM to use it as a development environment\&. 
