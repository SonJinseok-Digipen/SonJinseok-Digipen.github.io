.TH "TiXmlAttribute" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TiXmlAttribute
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <tinyxml\&.h>\fP
.PP
Inherits \fBTiXmlBase\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTiXmlAttribute\fP ()"
.br
.RI "Construct an empty attribute\&. "
.ti -1c
.RI "\fBTiXmlAttribute\fP (const char *_name, const char *_value)"
.br
.RI "Construct an attribute with a name and value\&. "
.ti -1c
.RI "const char * \fBName\fP () const"
.br
.RI "Return the name of this attribute\&. "
.ti -1c
.RI "const char * \fBValue\fP () const"
.br
.RI "Return the value of this attribute\&. "
.ti -1c
.RI "int \fBIntValue\fP () const"
.br
.RI "Return the value of this attribute, converted to an integer\&. "
.ti -1c
.RI "double \fBDoubleValue\fP () const"
.br
.RI "Return the value of this attribute, converted to a double\&. "
.ti -1c
.RI "const TIXML_STRING & \fBNameTStr\fP () const"
.br
.ti -1c
.RI "int \fBQueryIntValue\fP (int *_value) const"
.br
.ti -1c
.RI "int \fBQueryDoubleValue\fP (double *_value) const"
.br
.RI "QueryDoubleValue examines the value string\&. See \fBQueryIntValue()\fP\&. "
.ti -1c
.RI "void \fBSetName\fP (const char *_name)"
.br
.RI "Set the name of this attribute\&. "
.ti -1c
.RI "void \fBSetValue\fP (const char *_value)"
.br
.RI "Set the value\&. "
.ti -1c
.RI "void \fBSetIntValue\fP (int _value)"
.br
.RI "Set the value from an integer\&. "
.ti -1c
.RI "void \fBSetDoubleValue\fP (double _value)"
.br
.RI "Set the value from a double\&. "
.ti -1c
.RI "const \fBTiXmlAttribute\fP * \fBNext\fP () const"
.br
.RI "Get the next sibling attribute in the DOM\&. Returns null at end\&. "
.ti -1c
.RI "\fBTiXmlAttribute\fP * \fBNext\fP ()"
.br
.ti -1c
.RI "const \fBTiXmlAttribute\fP * \fBPrevious\fP () const"
.br
.RI "Get the previous sibling attribute in the DOM\&. Returns null at beginning\&. "
.ti -1c
.RI "\fBTiXmlAttribute\fP * \fBPrevious\fP ()"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBTiXmlAttribute\fP &rhs) const"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBTiXmlAttribute\fP &rhs) const"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBTiXmlAttribute\fP &rhs) const"
.br
.ti -1c
.RI "virtual const char * \fBParse\fP (const char *p, \fBTiXmlParsingData\fP *\fBdata\fP, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "virtual void \fBPrint\fP (FILE *cfile, int depth) const"
.br
.ti -1c
.RI "void \fBPrint\fP (FILE *cfile, int depth, TIXML_STRING *str) const"
.br
.ti -1c
.RI "void \fBSetDocument\fP (\fBTiXmlDocument\fP *doc)"
.br
.in -1c

Public Member Functions inherited from \fBTiXmlBase\fP
.in +1c
.ti -1c
.RI "virtual void \fBPrint\fP (FILE *cfile, int depth) const =0"
.br
.ti -1c
.RI "int \fBRow\fP () const"
.br
.ti -1c
.RI "int \fBColumn\fP () const"
.br
.RI "See \fBRow()\fP "
.ti -1c
.RI "void \fBSetUserData\fP (void *user)"
.br
.RI "Set a pointer to arbitrary user data\&. "
.ti -1c
.RI "void * \fBGetUserData\fP ()"
.br
.RI "Get a pointer to arbitrary user data\&. "
.ti -1c
.RI "const void * \fBGetUserData\fP () const"
.br
.RI "Get a pointer to arbitrary user data\&. "
.ti -1c
.RI "virtual const char * \fBParse\fP (const char *p, \fBTiXmlParsingData\fP *\fBdata\fP, TiXmlEncoding encoding)=0"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBTiXmlAttributeSet\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBTiXmlBase\fP
.in +1c
.ti -1c
.RI "enum { \fBTIXML_NO_ERROR\fP = 0, \fBTIXML_ERROR\fP, \fBTIXML_ERROR_OPENING_FILE\fP, \fBTIXML_ERROR_PARSING_ELEMENT\fP, \fBTIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME\fP, \fBTIXML_ERROR_READING_ELEMENT_VALUE\fP, \fBTIXML_ERROR_READING_ATTRIBUTES\fP, \fBTIXML_ERROR_PARSING_EMPTY\fP, \fBTIXML_ERROR_READING_END_TAG\fP, \fBTIXML_ERROR_PARSING_UNKNOWN\fP, \fBTIXML_ERROR_PARSING_COMMENT\fP, \fBTIXML_ERROR_PARSING_DECLARATION\fP, \fBTIXML_ERROR_DOCUMENT_EMPTY\fP, \fBTIXML_ERROR_EMBEDDED_NULL\fP, \fBTIXML_ERROR_PARSING_CDATA\fP, \fBTIXML_ERROR_DOCUMENT_TOP_ONLY\fP, \fBTIXML_ERROR_STRING_COUNT\fP }"
.br
.in -1c

Static Public Member Functions inherited from \fBTiXmlBase\fP
.in +1c
.ti -1c
.RI "static void \fBSetCondenseWhiteSpace\fP (bool condense)"
.br
.ti -1c
.RI "static bool \fBIsWhiteSpaceCondensed\fP ()"
.br
.RI "Return the current white space setting\&. "
.ti -1c
.RI "static void \fBEncodeString\fP (const TIXML_STRING &str, TIXML_STRING *out)"
.br
.in -1c

Static Public Attributes inherited from \fBTiXmlBase\fP
.in +1c
.ti -1c
.RI "static const int \fButf8ByteTable\fP [256]"
.br
.in -1c

Static Protected Member Functions inherited from \fBTiXmlBase\fP
.in +1c
.ti -1c
.RI "static const char * \fBSkipWhiteSpace\fP (const char *, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "static bool \fBIsWhiteSpace\fP (char c)"
.br
.ti -1c
.RI "static bool \fBIsWhiteSpace\fP (int c)"
.br
.ti -1c
.RI "static const char * \fBReadName\fP (const char *p, TIXML_STRING *name, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "static const char * \fBReadText\fP (const char *in, TIXML_STRING *text, bool ignoreWhiteSpace, const char *endTag, bool ignoreCase, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "static const char * \fBGetEntity\fP (const char *in, char *\fBvalue\fP, int *length, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "static const char * \fBGetChar\fP (const char *p, char *_value, int *length, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "static bool \fBStringEqual\fP (const char *p, const char *endTag, bool ignoreCase, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "static int \fBIsAlpha\fP (unsigned char anyByte, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "static int \fBIsAlphaNum\fP (unsigned char anyByte, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "static int \fBToLower\fP (int v, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "static void \fBConvertUTF32ToUTF8\fP (unsigned long \fBinput\fP, char *output, int *length)"
.br
.in -1c

Protected Attributes inherited from \fBTiXmlBase\fP
.in +1c
.ti -1c
.RI "\fBTiXmlCursor\fP \fBlocation\fP"
.br
.ti -1c
.RI "void * \fBuserData\fP"
.br
.RI "Field containing a generic user pointer\&. "
.in -1c

Static Protected Attributes inherited from \fBTiXmlBase\fP
.in +1c
.ti -1c
.RI "static const char * \fBerrorString\fP [TIXML_ERROR_STRING_COUNT]"
.br
.in -1c
.SH "Detailed Description"
.PP 
An attribute is a name-value pair\&. Elements have an arbitrary number of attributes, each with a unique name\&.
.PP
\fBNote\fP
.RS 4
The attributes are not TiXmlNodes, since they are not part of the tinyXML document object model\&. There are other suggested ways to look at this problem\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "const char * TiXmlAttribute::Parse (const char * p, \fBTiXmlParsingData\fP * data, TiXmlEncoding encoding)\fC [virtual]\fP"

.PP
Implements \fBTiXmlBase\fP\&.
.SS "virtual void TiXmlAttribute::Print (FILE * cfile, int depth) const\fC [inline]\fP, \fC [virtual]\fP"
All TinyXml classes can print themselves to a filestream or the string class (\fBTiXmlString\fP in non-STL mode, std::string in STL mode\&.) Either or both cfile and str can be null\&.
.PP
This is a formatted print, and will insert tabs and newlines\&.
.PP
(For an unformatted stream, use the << operator\&.) 
.PP
Implements \fBTiXmlBase\fP\&.
.SS "int TiXmlAttribute::QueryIntValue (int * _value) const"
QueryIntValue examines the value string\&. It is an alternative to the \fBIntValue()\fP method with richer error checking\&. If the value is an integer, it is stored in 'value' and the call returns TIXML_SUCCESS\&. If it is not an integer, it returns TIXML_WRONG_TYPE\&.
.PP
\fBA\fP specialized but useful call\&. Note that for success it returns 0, which is the opposite of almost all other TinyXml calls\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
