.TH "machine_index_t< Iter >" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
machine_index_t< Iter >
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBhb_iter_with_fallback_t< machine_index_t< Iter >, Iter::item_t >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmachine_index_t\fP (const Iter &it)"
.br
.ti -1c
.RI "\fBmachine_index_t\fP (const \fBmachine_index_t\fP &o)"
.br
.ti -1c
.RI "Iter::item_t \fB__item__\fP () const"
.br
.ti -1c
.RI "Iter::item_t \fB__item_at__\fP (unsigned i) const"
.br
.ti -1c
.RI "unsigned \fB__len__\fP () const"
.br
.ti -1c
.RI "void \fB__next__\fP ()"
.br
.ti -1c
.RI "void \fB__forward__\fP (unsigned n)"
.br
.ti -1c
.RI "void \fB__prev__\fP ()"
.br
.ti -1c
.RI "void \fB__rewind__\fP (unsigned n)"
.br
.ti -1c
.RI "void \fBoperator=\fP (unsigned n)"
.br
.ti -1c
.RI "void \fBoperator=\fP (const \fBmachine_index_t\fP &o)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBmachine_index_t\fP &o) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBmachine_index_t\fP &o) const"
.br
.in -1c

Public Member Functions inherited from \fBhb_iter_t< iter_t, Item >\fP
.in +1c
.ti -1c
.RI "constexpr unsigned \fBget_item_size\fP () const"
.br
.ti -1c
.RI "iter_t \fBiter\fP () const"
.br
.ti -1c
.RI "iter_t \fBoperator+\fP () const"
.br
.ti -1c
.RI "iter_t \fBbegin\fP () const"
.br
.ti -1c
.RI "iter_t \fBend\fP () const"
.br
.ti -1c
.RI "\fBoperator bool\fP () const"
.br
.ti -1c
.RI "unsigned \fBlen\fP () const"
.br
.ti -1c
.RI "template<typename T  = item_t, \fBhb_enable_if\fP(std::is_reference< T >\fB::value\fP) > hb_remove_reference< item_t > * \fBoperator\->\fP () const"
.br
.ti -1c
.RI "item_t \fBoperator*\fP () const"
.br
.ti -1c
.RI "item_t \fBoperator*\fP ()"
.br
.ti -1c
.RI "item_t \fBoperator[]\fP (unsigned i) const"
.br
.ti -1c
.RI "item_t \fBoperator[]\fP (unsigned i)"
.br
.ti -1c
.RI "iter_t & \fBoperator+=\fP (unsigned count) &"
.br
.ti -1c
.RI "iter_t \fBoperator+=\fP (unsigned count) &&"
.br
.ti -1c
.RI "iter_t & \fBoperator++\fP () &"
.br
.ti -1c
.RI "iter_t \fBoperator++\fP () &&"
.br
.ti -1c
.RI "iter_t & \fBoperator\-=\fP (unsigned count) &"
.br
.ti -1c
.RI "iter_t \fBoperator\-=\fP (unsigned count) &&"
.br
.ti -1c
.RI "iter_t & \fBoperator\-\-\fP () &"
.br
.ti -1c
.RI "iter_t \fBoperator\-\-\fP () &&"
.br
.ti -1c
.RI "iter_t \fBoperator+\fP (unsigned count) const"
.br
.ti -1c
.RI "iter_t \fBoperator++\fP (int)"
.br
.ti -1c
.RI "iter_t \fBoperator\-\fP (unsigned count) const"
.br
.ti -1c
.RI "iter_t \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "template<typename T > iter_t & \fBoperator>>\fP (T &v) &"
.br
.ti -1c
.RI "template<typename T > iter_t \fBoperator>>\fP (T &v) &&"
.br
.ti -1c
.RI "template<typename T > iter_t & \fBoperator<<\fP (const T v) &"
.br
.ti -1c
.RI "template<typename T > iter_t \fBoperator<<\fP (const T v) &&"
.br
.in -1c

Public Member Functions inherited from \fBhb_iter_fallback_mixin_t< iter_t, item_t >\fP
.in +1c
.ti -1c
.RI "item_t \fB__item__\fP () const"
.br
.ti -1c
.RI "item_t \fB__item_at__\fP (unsigned i) const"
.br
.ti -1c
.RI "bool \fB__more__\fP () const"
.br
.ti -1c
.RI "unsigned \fB__len__\fP () const"
.br
.ti -1c
.RI "void \fB__next__\fP ()"
.br
.ti -1c
.RI "void \fB__forward__\fP (unsigned n)"
.br
.ti -1c
.RI "void \fB__prev__\fP ()"
.br
.ti -1c
.RI "void \fB__rewind__\fP (unsigned n)"
.br
.ti -1c
.RI "iter_t \fB__end__\fP () const"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr bool \fBis_random_access_iterator\fP = Iter::is_random_access_iterator"
.br
.ti -1c
.RI "static constexpr bool \fBis_sorted_iterator\fP = Iter::is_sorted_iterator"
.br
.in -1c

Static Public Attributes inherited from \fBhb_iter_t< iter_t, Item >\fP
.in +1c
.ti -1c
.RI "static constexpr bool \fBis_iterator\fP = true"
.br
.ti -1c
.RI "static constexpr bool \fBis_random_access_iterator\fP = false"
.br
.ti -1c
.RI "static constexpr bool \fBis_sorted_iterator\fP = false"
.br
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBhb_iter_t< iter_t, Item >\fP
.in +1c
.ti -1c
.RI "typedef Item \fBitem_t\fP"
.br
.in -1c

Protected Member Functions inherited from \fBhb_iter_with_fallback_t< machine_index_t< Iter >, Iter::item_t >\fP
.in +1c
.ti -1c
.RI "\fBhb_iter_with_fallback_t\fP (const \fBhb_iter_with_fallback_t\fP &o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_with_fallback_t\fP (\fBhb_iter_with_fallback_t\fP &&o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_with_fallback_t\fP & \fBoperator=\fP (const \fBhb_iter_with_fallback_t\fP &o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_with_fallback_t\fP & \fBoperator=\fP (\fBhb_iter_with_fallback_t\fP &&o HB_UNUSED)=default"
.br
.in -1c

Protected Member Functions inherited from \fBhb_iter_t< iter_t, Item >\fP
.in +1c
.ti -1c
.RI "\fBhb_iter_t\fP (const \fBhb_iter_t\fP &o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_t\fP (\fBhb_iter_t\fP &&o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_t\fP & \fBoperator=\fP (const \fBhb_iter_t\fP &o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_t\fP & \fBoperator=\fP (\fBhb_iter_t\fP &&o HB_UNUSED)=default"
.br
.in -1c

Protected Member Functions inherited from \fBhb_iter_fallback_mixin_t< iter_t, item_t >\fP
.in +1c
.ti -1c
.RI "\fBhb_iter_fallback_mixin_t\fP (const \fBhb_iter_fallback_mixin_t\fP &o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_fallback_mixin_t\fP (\fBhb_iter_fallback_mixin_t\fP &&o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_fallback_mixin_t\fP & \fBoperator=\fP (const \fBhb_iter_fallback_mixin_t\fP &o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_fallback_mixin_t\fP & \fBoperator=\fP (\fBhb_iter_fallback_mixin_t\fP &&o HB_UNUSED)=default"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
