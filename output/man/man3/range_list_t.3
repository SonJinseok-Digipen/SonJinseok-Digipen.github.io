.TH "range_list_t" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
range_list_t
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBhb_vector_t< code_pair_t >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBcomplete\fP (unsigned int last_glyph)"
.br
.in -1c

Public Member Functions inherited from \fBhb_vector_t< code_pair_t >\fP
.in +1c
.ti -1c
.RI "\fBhb_vector_t\fP (std::initializer_list< code_pair_t > lst)"
.br
.ti -1c
.RI "\fBhb_vector_t\fP (const Iterable &o)"
.br
.ti -1c
.RI "\fBhb_vector_t\fP (const \fBhb_vector_t\fP &o)"
.br
.ti -1c
.RI "\fBhb_vector_t\fP (\fBhb_vector_t\fP &&o)"
.br
.ti -1c
.RI "void \fBinit\fP ()"
.br
.ti -1c
.RI "void \fBfini\fP ()"
.br
.ti -1c
.RI "void \fBreset\fP ()"
.br
.ti -1c
.RI "\fBhb_vector_t\fP & \fBoperator=\fP (const \fBhb_vector_t\fP &o)"
.br
.ti -1c
.RI "\fBhb_vector_t\fP & \fBoperator=\fP (\fBhb_vector_t\fP &&o)"
.br
.ti -1c
.RI "\fBhb_bytes_t\fP \fBas_bytes\fP () const"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBhb_vector_t\fP &o) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBhb_vector_t\fP &o) const"
.br
.ti -1c
.RI "uint32_t \fBhash\fP () const"
.br
.ti -1c
.RI "code_pair_t & \fBoperator[]\fP (int i_)"
.br
.ti -1c
.RI "const code_pair_t & \fBoperator[]\fP (int i_) const"
.br
.ti -1c
.RI "code_pair_t & \fBtail\fP ()"
.br
.ti -1c
.RI "const code_pair_t & \fBtail\fP () const"
.br
.ti -1c
.RI "\fBoperator bool\fP () const"
.br
.ti -1c
.RI "unsigned \fBget_size\fP () const"
.br
.ti -1c
.RI "\fBhb_vector_t\fP & \fBoperator<<\fP (T &&v)"
.br
.ti -1c
.RI "\fBarray_t\fP \fBas_array\fP ()"
.br
.ti -1c
.RI "c_array_t \fBas_array\fP () const"
.br
.ti -1c
.RI "iter_t \fBiter\fP () const"
.br
.ti -1c
.RI "writer_t \fBwriter\fP ()"
.br
.ti -1c
.RI "\fBoperator iter_t\fP () const"
.br
.ti -1c
.RI "\fBoperator writer_t\fP ()"
.br
.ti -1c
.RI "c_array_t \fBsub_array\fP (unsigned int start_offset, unsigned int count) const"
.br
.ti -1c
.RI "c_array_t \fBsub_array\fP (unsigned int start_offset, unsigned int *count=nullptr) const"
.br
.ti -1c
.RI "\fBarray_t\fP \fBsub_array\fP (unsigned int start_offset, unsigned int count)"
.br
.ti -1c
.RI "\fBarray_t\fP \fBsub_array\fP (unsigned int start_offset, unsigned int *count=nullptr)"
.br
.ti -1c
.RI "\fBhb_sorted_array_t\fP< code_pair_t > \fBas_sorted_array\fP ()"
.br
.ti -1c
.RI "\fBhb_sorted_array_t\fP< const code_pair_t > \fBas_sorted_array\fP () const"
.br
.ti -1c
.RI "\fBoperator T*\fP ()"
.br
.ti -1c
.RI "\fBoperator const T *\fP () const"
.br
.ti -1c
.RI "code_pair_t * \fBoperator+\fP (unsigned int i)"
.br
.ti -1c
.RI "const code_pair_t * \fBoperator+\fP (unsigned int i) const"
.br
.ti -1c
.RI "code_pair_t * \fBpush\fP ()"
.br
.ti -1c
.RI "code_pair_t * \fBpush\fP (T &&v)"
.br
.ti -1c
.RI "bool \fBin_error\fP () const"
.br
.ti -1c
.RI "code_pair_t * \fBrealloc_vector\fP (unsigned new_allocated)"
.br
.ti -1c
.RI "code_pair_t * \fBrealloc_vector\fP (unsigned new_allocated)"
.br
.ti -1c
.RI "void \fBgrow_vector\fP (unsigned size)"
.br
.ti -1c
.RI "void \fBgrow_vector\fP (unsigned size)"
.br
.ti -1c
.RI "void \fBshrink_vector\fP (unsigned size)"
.br
.ti -1c
.RI "void \fBshrink_vector\fP (unsigned size)"
.br
.ti -1c
.RI "void \fBshift_down_vector\fP (unsigned i)"
.br
.ti -1c
.RI "void \fBshift_down_vector\fP (unsigned i)"
.br
.ti -1c
.RI "bool \fBalloc\fP (unsigned int size)"
.br
.ti -1c
.RI "bool \fBresize\fP (int size_)"
.br
.ti -1c
.RI "code_pair_t \fBpop\fP ()"
.br
.ti -1c
.RI "void \fBremove\fP (unsigned int i)"
.br
.ti -1c
.RI "void \fBshrink\fP (int size_)"
.br
.ti -1c
.RI "void \fBqsort\fP (int(*cmp)(const void *, const void *))"
.br
.ti -1c
.RI "void \fBqsort\fP (unsigned int start=0, unsigned int end=(unsigned int) \-1)"
.br
.ti -1c
.RI "code_pair_t * \fBlsearch\fP (const T &x, code_pair_t *not_found=nullptr)"
.br
.ti -1c
.RI "const code_pair_t * \fBlsearch\fP (const T &x, const code_pair_t *not_found=nullptr) const"
.br
.ti -1c
.RI "bool \fBlfind\fP (const T &x, unsigned *pos=nullptr) const"
.br
.ti -1c
.RI "code_pair_t * \fBbsearch\fP (const T &x, code_pair_t *not_found=nullptr)"
.br
.ti -1c
.RI "const code_pair_t * \fBbsearch\fP (const T &x, const code_pair_t *not_found=nullptr) const"
.br
.ti -1c
.RI "bool \fBbfind\fP (const T &x, unsigned int *i=nullptr, hb_not_found_t not_found=HB_NOT_FOUND_DONT_STORE, unsigned int to_store=(unsigned int) \-1) const"
.br
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBhb_vector_t< code_pair_t >\fP
.in +1c
.ti -1c
.RI "typedef code_pair_t \fBitem_t\fP"
.br
.ti -1c
.RI "using \fBarray_t\fP = typename std::conditional< false, \fBhb_sorted_array_t\fP< code_pair_t >, \fBhb_array_t\fP< code_pair_t > >::type"
.br
.ti -1c
.RI "using \fBc_array_t\fP = typename std::conditional< false, \fBhb_sorted_array_t\fP< const code_pair_t >, \fBhb_array_t\fP< const code_pair_t > >::type"
.br
.ti -1c
.RI "typedef c_array_t \fBiter_t\fP"
.br
.ti -1c
.RI "typedef \fBarray_t\fP \fBwriter_t\fP"
.br
.in -1c

Public Attributes inherited from \fBhb_vector_t< code_pair_t >\fP
.in +1c
.ti -1c
.RI "unsigned int \fBlength\fP"
.br
.ti -1c
.RI "code_pair_t * \fBarrayZ\fP"
.br
.in -1c

Static Public Attributes inherited from \fBhb_vector_t< code_pair_t >\fP
.in +1c
.ti -1c
.RI "static constexpr unsigned \fBitem_size\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
