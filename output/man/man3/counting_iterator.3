.TH "counting_iterator" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
counting_iterator
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBvalue_type\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "using \fBiterator_category\fP = std::output_iterator_tag"
.br
.ti -1c
.RI "using \fBdifference_type\fP = std::ptrdiff_t"
.br
.ti -1c
.RI "using \fBpointer\fP = void"
.br
.ti -1c
.RI "using \fBreference\fP = void"
.br
.ti -1c
.RI "using \fBiterator_category\fP = std::output_iterator_tag"
.br
.ti -1c
.RI "using \fBdifference_type\fP = std::ptrdiff_t"
.br
.ti -1c
.RI "using \fBpointer\fP = void"
.br
.ti -1c
.RI "using \fBreference\fP = void"
.br
.ti -1c
.RI "using \fBiterator_category\fP = std::output_iterator_tag"
.br
.ti -1c
.RI "using \fBdifference_type\fP = std::ptrdiff_t"
.br
.ti -1c
.RI "using \fBpointer\fP = void"
.br
.ti -1c
.RI "using \fBreference\fP = void"
.br
.ti -1c
.RI "using \fBiterator_category\fP = std::output_iterator_tag"
.br
.ti -1c
.RI "using \fBdifference_type\fP = std::ptrdiff_t"
.br
.ti -1c
.RI "using \fBpointer\fP = void"
.br
.ti -1c
.RI "using \fBreference\fP = void"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFMT_UNCHECKED_ITERATOR\fP (\fBcounting_iterator\fP)"
.br
.ti -1c
.RI "FMT_CONSTEXPR size_t \fBcount\fP () const"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBcounting_iterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBcounting_iterator\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBvalue_type\fP \fBoperator*\fP () const"
.br
.ti -1c
.RI "\fBFMT_UNCHECKED_ITERATOR\fP (\fBcounting_iterator\fP)"
.br
.ti -1c
.RI "FMT_CONSTEXPR size_t \fBcount\fP () const"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBcounting_iterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBcounting_iterator\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBvalue_type\fP \fBoperator*\fP () const"
.br
.ti -1c
.RI "\fBFMT_UNCHECKED_ITERATOR\fP (\fBcounting_iterator\fP)"
.br
.ti -1c
.RI "FMT_CONSTEXPR size_t \fBcount\fP () const"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBcounting_iterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBcounting_iterator\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBvalue_type\fP \fBoperator*\fP () const"
.br
.ti -1c
.RI "\fBFMT_UNCHECKED_ITERATOR\fP (\fBcounting_iterator\fP)"
.br
.ti -1c
.RI "FMT_CONSTEXPR size_t \fBcount\fP () const"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBcounting_iterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBcounting_iterator\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "FMT_CONSTEXPR \fBvalue_type\fP \fBoperator*\fP () const"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "FMT_CONSTEXPR friend \fBcounting_iterator\fP \fBoperator+\fP (\fBcounting_iterator\fP it, difference_type n)"
.br
.ti -1c
.RI "FMT_CONSTEXPR friend \fBcounting_iterator\fP \fBoperator+\fP (\fBcounting_iterator\fP it, difference_type n)"
.br
.ti -1c
.RI "FMT_CONSTEXPR friend \fBcounting_iterator\fP \fBoperator+\fP (\fBcounting_iterator\fP it, difference_type n)"
.br
.ti -1c
.RI "FMT_CONSTEXPR friend \fBcounting_iterator\fP \fBoperator+\fP (\fBcounting_iterator\fP it, difference_type n)"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
