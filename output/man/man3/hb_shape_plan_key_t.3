.TH "hb_shape_plan_key_t" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hb_shape_plan_key_t
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "HB_INTERNAL bool \fBinit\fP (bool copy, \fBhb_face_t\fP *face, const \fBhb_segment_properties_t\fP *props, const \fBhb_feature_t\fP *user_features, unsigned int num_user_features, const int *coords, unsigned int num_coords, const char *const *shaper_list)"
.br
.ti -1c
.RI "HB_INTERNAL void \fBfini\fP ()"
.br
.ti -1c
.RI "HB_INTERNAL bool \fBuser_features_match\fP (const \fBhb_shape_plan_key_t\fP *other)"
.br
.ti -1c
.RI "HB_INTERNAL bool \fBequal\fP (const \fBhb_shape_plan_key_t\fP *other)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBhb_segment_properties_t\fP \fBprops\fP"
.br
.ti -1c
.RI "const \fBhb_feature_t\fP * \fBuser_features\fP"
.br
.ti -1c
.RI "unsigned int \fBnum_user_features\fP"
.br
.ti -1c
.RI "\fBhb_ot_shape_plan_key_t\fP \fBot\fP"
.br
.ti -1c
.RI "hb_shape_func_t * \fBshaper_func\fP"
.br
.ti -1c
.RI "const char * \fBshaper_name\fP"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "bool hb_shape_plan_key_t::init (bool copy, \fBhb_face_t\fP * face, const \fBhb_segment_properties_t\fP * props, const \fBhb_feature_t\fP * user_features, unsigned int num_user_features, const int * coords, unsigned int num_coords, const char *const * shaper_list)"
SECTION:hb-shape-plan @title: hb-shape-plan @short_description: Object representing a shaping plan  \fBhb\&.h\fP
.PP
Shape plans are an internal mechanism\&. Each plan contains state describing how HarfBuzz will shape a particular text segment, based on the combination of segment properties and the capabilities in the font face in use\&.
.PP
Shape plans are not used for shaping directly, but can be queried to access certain information about how shaping will perform, given a set of specific input parameters (script, language, direction, features, etc\&.)\&.
.PP
Most client programs will not need to deal with shape plans directly\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
