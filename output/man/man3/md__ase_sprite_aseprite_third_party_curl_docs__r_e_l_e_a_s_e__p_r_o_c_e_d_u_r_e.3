.TH "md__ase_sprite_aseprite_third_party_curl_docs__r_e_l_e_a_s_e__p_r_o_c_e_d_u_r_e" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__ase_sprite_aseprite_third_party_curl_docs__r_e_l_e_a_s_e__p_r_o_c_e_d_u_r_e \- curl release procedure - how to do a release 
.PP

.SH "in the source code repo"
.PP
.IP "\(bu" 2
run \fC\&./scripts/copyright\&.pl\fP and correct possible omissions
.IP "\(bu" 2
edit \fCRELEASE-NOTES\fP to be accurate
.IP "\(bu" 2
update \fCdocs/THANKS\fP
.IP "\(bu" 2
make sure all relevant changes are committed on the master branch
.IP "\(bu" 2
tag the git repo in this style: \fCgit tag -a curl-7_34_0\fP\&. -a annotates the tag and we use underscores instead of dots in the version number\&. Make sure the tag is GPG signed (using -s)\&.
.IP "\(bu" 2
run '\&./maketgz 7\&.34\&.0' to build the release tarballs\&. It is important that you run this on a machine with the correct set of autotools etc installed as this is what then will be shipped and used by most users on *nix like systems\&.
.IP "\(bu" 2
push the git commits and the new tag
.IP "\(bu" 2
gpg sign the 4 tarballs as maketgz suggests
.IP "\(bu" 2
upload the 8 resulting files to the primary download directory
.PP
.SH "in the curl-www repo"
.PP
.IP "\(bu" 2
edit \fCMakefile\fP (version number and date),
.IP "\(bu" 2
edit \fC_newslog\&.html\fP (announce the new release) and
.IP "\(bu" 2
edit \fC_changes\&.html\fP (insert changes+bugfixes from RELEASE-NOTES)
.IP "\(bu" 2
commit all local changes
.IP "\(bu" 2
tag the repo with the same name as used for the source repo\&.
.IP "\(bu" 2
make sure all relevant changes are committed and pushed on the master branch
.PP
(the website then updates its contents automatically)
.PP
.SH "on GitHub"
.PP
.IP "\(bu" 2
edit the newly made release tag so that it is listed as the latest release
.PP
.SH "inform"
.PP
.IP "\(bu" 2
send an email to curl-users, curl-announce and curl-library\&. Insert the RELEASE-NOTES into the mail\&.
.PP
.SH "celebrate"
.PP
.IP "\(bu" 2
suitable beverage intake is encouraged for the festivities
.PP
.SH "curl release scheduling"
.PP
.SS "Release Cycle"
We do releases every 8 weeks on Wednesdays\&. If critical problems arise, we can insert releases outside of the schedule or we can move the release date - but this is rare\&.
.PP
Each 8 week release cycle is split in two 4-week periods\&.
.PP
.IP "\(bu" 2
During the first 4 weeks after a release, we allow new features and changes to curl and libcurl\&. If we accept any such changes, we bump the minor number used for the next release\&.
.IP "\(bu" 2
During the second 4-week period we do not merge any features or changes, we then only focus on fixing bugs and polishing things to make a solid coming release\&.
.IP "\(bu" 2
After a regular procedure-following release (made on Wednesdays), the feature window remains closed until the following Monday in case of special actions or patch releases etc\&.
.PP
.PP
If a future release date happens to end up on a 'bad date', like in the middle of common public holidays or when the lead release manager is away traveling, the release date can be moved forwards or backwards a full week\&. This is then advertised well in advance\&.
.SS "Coming dates"
Based on the description above, here are some planned release dates (at the time of this writing):
.PP
.IP "\(bu" 2
September 15, 2021 (7\&.79\&.0)
.IP "\(bu" 2
November 10, 2021
.IP "\(bu" 2
January 5, 2022
.IP "\(bu" 2
March 2, 2022
.IP "\(bu" 2
April 27, 2022
.IP "\(bu" 2
June 22, 2022
.IP "\(bu" 2
August 17, 2022
.IP "\(bu" 2
October 12, 2022
.IP "\(bu" 2
December 7, 2022
.IP "\(bu" 2
February 1, 2023
.IP "\(bu" 2
March 20, 2023 (8\&.0\&.0)
.PP
.PP
The above (and more) curl-related dates are published in \fCiCalendar format\fP as well\&. 
