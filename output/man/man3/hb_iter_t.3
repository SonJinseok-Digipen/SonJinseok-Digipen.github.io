.TH "hb_iter_t< iter_t, Item >" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hb_iter_t< iter_t, Item >
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBhb_iter_with_fallback_t< iter_t, hb_codepoint_t >\fP, \fBhb_iter_with_fallback_t< composite_iter_t, const CompositeGlyphChain & >\fP, \fBhb_iter_with_fallback_t< array_iter_t< T >, T & >\fP, \fBhb_iter_with_fallback_t< hb_array_t< Type >, Type & >\fP, \fBhb_iter_with_fallback_t< hb_filter_iter_t< Iter, Pred, Proj >, Iter::item_t >\fP, \fBhb_iter_with_fallback_t< hb_iota_iter_t< T, S >, T >\fP, \fBhb_iter_with_fallback_t< machine_index_t< Iter >, Iter::item_t >\fP, \fBhb_iter_with_fallback_t< hb_array_t< const char >, const char & >\fP, \fBhb_iter_with_fallback_t< hb_array_t< T >, T & >\fP, and \fBhb_iter_with_fallback_t< iter_t, item_t >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Item \fBitem_t\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr unsigned \fBget_item_size\fP () const"
.br
.ti -1c
.RI "iter_t \fBiter\fP () const"
.br
.ti -1c
.RI "iter_t \fBoperator+\fP () const"
.br
.ti -1c
.RI "iter_t \fBbegin\fP () const"
.br
.ti -1c
.RI "iter_t \fBend\fP () const"
.br
.ti -1c
.RI "\fBoperator bool\fP () const"
.br
.ti -1c
.RI "unsigned \fBlen\fP () const"
.br
.ti -1c
.RI "template<typename T  = item_t, \fBhb_enable_if\fP(std::is_reference< T >\fB::value\fP) > hb_remove_reference< item_t > * \fBoperator\->\fP () const"
.br
.ti -1c
.RI "item_t \fBoperator*\fP () const"
.br
.ti -1c
.RI "item_t \fBoperator*\fP ()"
.br
.ti -1c
.RI "item_t \fBoperator[]\fP (unsigned i) const"
.br
.ti -1c
.RI "item_t \fBoperator[]\fP (unsigned i)"
.br
.ti -1c
.RI "iter_t & \fBoperator+=\fP (unsigned count) &"
.br
.ti -1c
.RI "iter_t \fBoperator+=\fP (unsigned count) &&"
.br
.ti -1c
.RI "iter_t & \fBoperator++\fP () &"
.br
.ti -1c
.RI "iter_t \fBoperator++\fP () &&"
.br
.ti -1c
.RI "iter_t & \fBoperator\-=\fP (unsigned count) &"
.br
.ti -1c
.RI "iter_t \fBoperator\-=\fP (unsigned count) &&"
.br
.ti -1c
.RI "iter_t & \fBoperator\-\-\fP () &"
.br
.ti -1c
.RI "iter_t \fBoperator\-\-\fP () &&"
.br
.ti -1c
.RI "iter_t \fBoperator+\fP (unsigned count) const"
.br
.ti -1c
.RI "iter_t \fBoperator++\fP (int)"
.br
.ti -1c
.RI "iter_t \fBoperator\-\fP (unsigned count) const"
.br
.ti -1c
.RI "iter_t \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "template<typename T > iter_t & \fBoperator>>\fP (T &v) &"
.br
.ti -1c
.RI "template<typename T > iter_t \fBoperator>>\fP (T &v) &&"
.br
.ti -1c
.RI "template<typename T > iter_t & \fBoperator<<\fP (const T v) &"
.br
.ti -1c
.RI "template<typename T > iter_t \fBoperator<<\fP (const T v) &&"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr bool \fBis_iterator\fP = true"
.br
.ti -1c
.RI "static constexpr bool \fBis_random_access_iterator\fP = false"
.br
.ti -1c
.RI "static constexpr bool \fBis_sorted_iterator\fP = false"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBhb_iter_t\fP (const \fBhb_iter_t\fP &o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_t\fP (\fBhb_iter_t\fP &&o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_t\fP & \fBoperator=\fP (const \fBhb_iter_t\fP &o HB_UNUSED)=default"
.br
.ti -1c
.RI "\fBhb_iter_t\fP & \fBoperator=\fP (\fBhb_iter_t\fP &&o HB_UNUSED)=default"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "iter_t \fBoperator+\fP (unsigned count, const iter_t &it)"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
