.TH "chrono_formatter< FormatContext, OutputIt, Rep, Period >" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
chrono_formatter< FormatContext, OutputIt, Rep, Period >
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "using \fBrep\fP = conditional_t< std::is_integral< Rep >\fB::value\fP &&sizeof(Rep)< sizeof(int), unsigned, typename \fBmake_unsigned_or_unchanged\fP< Rep >::type >"
.br
.ti -1c
.RI "using \fBseconds\fP = std::chrono::duration< rep >"
.br
.ti -1c
.RI "using \fBmilliseconds\fP = std::chrono::duration< rep, std::milli >"
.br
.ti -1c
.RI "using \fBchar_type\fP = typename FormatContext::char_type"
.br
.ti -1c
.RI "using \fBtm_writer_type\fP = \fBtm_writer\fP< OutputIt, char_type >"
.br
.ti -1c
.RI "using \fBrep\fP = conditional_t< std::is_integral< Rep >\fB::value\fP &&sizeof(Rep)< sizeof(int), unsigned, typename \fBmake_unsigned_or_unchanged\fP< Rep >::type >"
.br
.ti -1c
.RI "using \fBseconds\fP = std::chrono::duration< rep >"
.br
.ti -1c
.RI "using \fBmilliseconds\fP = std::chrono::duration< rep, std::milli >"
.br
.ti -1c
.RI "using \fBchar_type\fP = typename FormatContext::char_type"
.br
.ti -1c
.RI "using \fBtm_writer_type\fP = \fBtm_writer\fP< OutputIt, char_type >"
.br
.ti -1c
.RI "using \fBrep\fP = conditional_t< std::is_integral< Rep >\fB::value\fP &&sizeof(Rep)< sizeof(int), unsigned, typename \fBmake_unsigned_or_unchanged\fP< Rep >::type >"
.br
.ti -1c
.RI "using \fBseconds\fP = std::chrono::duration< rep >"
.br
.ti -1c
.RI "using \fBmilliseconds\fP = std::chrono::duration< rep, std::milli >"
.br
.ti -1c
.RI "using \fBchar_type\fP = typename FormatContext::char_type"
.br
.ti -1c
.RI "using \fBtm_writer_type\fP = \fBtm_writer\fP< OutputIt, char_type >"
.br
.ti -1c
.RI "using \fBrep\fP = conditional_t< std::is_integral< Rep >\fB::value\fP &&sizeof(Rep)< sizeof(int), unsigned, typename \fBmake_unsigned_or_unchanged\fP< Rep >::type >"
.br
.ti -1c
.RI "using \fBseconds\fP = std::chrono::duration< rep >"
.br
.ti -1c
.RI "using \fBmilliseconds\fP = std::chrono::duration< rep, std::milli >"
.br
.ti -1c
.RI "using \fBchar_type\fP = typename FormatContext::char_type"
.br
.ti -1c
.RI "using \fBtm_writer_type\fP = \fBtm_writer\fP< OutputIt, char_type >"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBchrono_formatter\fP (FormatContext &ctx, OutputIt o, std::chrono::duration< Rep, Period > d)"
.br
.ti -1c
.RI "bool \fBhandle_nan_inf\fP ()"
.br
.ti -1c
.RI "Rep \fBhour\fP () const"
.br
.ti -1c
.RI "Rep \fBhour12\fP () const"
.br
.ti -1c
.RI "Rep \fBminute\fP () const"
.br
.ti -1c
.RI "Rep \fBsecond\fP () const"
.br
.ti -1c
.RI "std::tm \fBtime\fP () const"
.br
.ti -1c
.RI "void \fBwrite_sign\fP ()"
.br
.ti -1c
.RI "void \fBwrite\fP (Rep \fBvalue\fP, int width)"
.br
.ti -1c
.RI "template<typename Duration > void \fBwrite_fractional_seconds\fP (Duration d)"
.br
.ti -1c
.RI "void \fBwrite_nan\fP ()"
.br
.ti -1c
.RI "void \fBwrite_pinf\fP ()"
.br
.ti -1c
.RI "void \fBwrite_ninf\fP ()"
.br
.ti -1c
.RI "template<typename Callback , typename\&.\&.\&. Args> void \fBformat_tm\fP (const tm &time, Callback cb, Args\&.\&.\&. args)"
.br
.ti -1c
.RI "void \fBon_text\fP (const char_type *begin, const char_type *end)"
.br
.ti -1c
.RI "void \fBon_abbr_weekday\fP ()"
.br
.ti -1c
.RI "void \fBon_full_weekday\fP ()"
.br
.ti -1c
.RI "void \fBon_dec0_weekday\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec1_weekday\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_abbr_month\fP ()"
.br
.ti -1c
.RI "void \fBon_full_month\fP ()"
.br
.ti -1c
.RI "void \fBon_datetime\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_loc_date\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_loc_time\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_us_date\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_date\fP ()"
.br
.ti -1c
.RI "void \fBon_utc_offset\fP ()"
.br
.ti -1c
.RI "void \fBon_tz_name\fP ()"
.br
.ti -1c
.RI "void \fBon_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_short_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_offset_year\fP ()"
.br
.ti -1c
.RI "void \fBon_century\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_iso_week_based_year\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_week_based_short_year\fP ()"
.br
.ti -1c
.RI "void \fBon_dec_month\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec0_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec1_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_iso_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_day_of_year\fP ()"
.br
.ti -1c
.RI "void \fBon_day_of_month\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_day_of_month_space\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_24_hour\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_12_hour\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_minute\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_second\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_12_hour_time\fP ()"
.br
.ti -1c
.RI "void \fBon_24_hour_time\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_time\fP ()"
.br
.ti -1c
.RI "void \fBon_am_pm\fP ()"
.br
.ti -1c
.RI "void \fBon_duration_value\fP ()"
.br
.ti -1c
.RI "void \fBon_duration_unit\fP ()"
.br
.ti -1c
.RI "\fBchrono_formatter\fP (FormatContext &ctx, OutputIt o, std::chrono::duration< Rep, Period > d)"
.br
.ti -1c
.RI "bool \fBhandle_nan_inf\fP ()"
.br
.ti -1c
.RI "Rep \fBhour\fP () const"
.br
.ti -1c
.RI "Rep \fBhour12\fP () const"
.br
.ti -1c
.RI "Rep \fBminute\fP () const"
.br
.ti -1c
.RI "Rep \fBsecond\fP () const"
.br
.ti -1c
.RI "std::tm \fBtime\fP () const"
.br
.ti -1c
.RI "void \fBwrite_sign\fP ()"
.br
.ti -1c
.RI "void \fBwrite\fP (Rep \fBvalue\fP, int width)"
.br
.ti -1c
.RI "template<typename Duration > void \fBwrite_fractional_seconds\fP (Duration d)"
.br
.ti -1c
.RI "void \fBwrite_nan\fP ()"
.br
.ti -1c
.RI "void \fBwrite_pinf\fP ()"
.br
.ti -1c
.RI "void \fBwrite_ninf\fP ()"
.br
.ti -1c
.RI "template<typename Callback , typename\&.\&.\&. Args> void \fBformat_tm\fP (const tm &time, Callback cb, Args\&.\&.\&. args)"
.br
.ti -1c
.RI "void \fBon_text\fP (const char_type *begin, const char_type *end)"
.br
.ti -1c
.RI "void \fBon_abbr_weekday\fP ()"
.br
.ti -1c
.RI "void \fBon_full_weekday\fP ()"
.br
.ti -1c
.RI "void \fBon_dec0_weekday\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec1_weekday\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_abbr_month\fP ()"
.br
.ti -1c
.RI "void \fBon_full_month\fP ()"
.br
.ti -1c
.RI "void \fBon_datetime\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_loc_date\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_loc_time\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_us_date\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_date\fP ()"
.br
.ti -1c
.RI "void \fBon_utc_offset\fP ()"
.br
.ti -1c
.RI "void \fBon_tz_name\fP ()"
.br
.ti -1c
.RI "void \fBon_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_short_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_offset_year\fP ()"
.br
.ti -1c
.RI "void \fBon_century\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_iso_week_based_year\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_week_based_short_year\fP ()"
.br
.ti -1c
.RI "void \fBon_dec_month\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec0_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec1_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_iso_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_day_of_year\fP ()"
.br
.ti -1c
.RI "void \fBon_day_of_month\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_day_of_month_space\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_24_hour\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_12_hour\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_minute\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_second\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_12_hour_time\fP ()"
.br
.ti -1c
.RI "void \fBon_24_hour_time\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_time\fP ()"
.br
.ti -1c
.RI "void \fBon_am_pm\fP ()"
.br
.ti -1c
.RI "void \fBon_duration_value\fP ()"
.br
.ti -1c
.RI "void \fBon_duration_unit\fP ()"
.br
.ti -1c
.RI "\fBchrono_formatter\fP (FormatContext &ctx, OutputIt o, std::chrono::duration< Rep, Period > d)"
.br
.ti -1c
.RI "bool \fBhandle_nan_inf\fP ()"
.br
.ti -1c
.RI "Rep \fBhour\fP () const"
.br
.ti -1c
.RI "Rep \fBhour12\fP () const"
.br
.ti -1c
.RI "Rep \fBminute\fP () const"
.br
.ti -1c
.RI "Rep \fBsecond\fP () const"
.br
.ti -1c
.RI "std::tm \fBtime\fP () const"
.br
.ti -1c
.RI "void \fBwrite_sign\fP ()"
.br
.ti -1c
.RI "void \fBwrite\fP (Rep \fBvalue\fP, int width)"
.br
.ti -1c
.RI "template<typename Duration > void \fBwrite_fractional_seconds\fP (Duration d)"
.br
.ti -1c
.RI "void \fBwrite_nan\fP ()"
.br
.ti -1c
.RI "void \fBwrite_pinf\fP ()"
.br
.ti -1c
.RI "void \fBwrite_ninf\fP ()"
.br
.ti -1c
.RI "template<typename Callback , typename\&.\&.\&. Args> void \fBformat_tm\fP (const tm &time, Callback cb, Args\&.\&.\&. args)"
.br
.ti -1c
.RI "void \fBon_text\fP (const char_type *begin, const char_type *end)"
.br
.ti -1c
.RI "void \fBon_abbr_weekday\fP ()"
.br
.ti -1c
.RI "void \fBon_full_weekday\fP ()"
.br
.ti -1c
.RI "void \fBon_dec0_weekday\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec1_weekday\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_abbr_month\fP ()"
.br
.ti -1c
.RI "void \fBon_full_month\fP ()"
.br
.ti -1c
.RI "void \fBon_datetime\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_loc_date\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_loc_time\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_us_date\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_date\fP ()"
.br
.ti -1c
.RI "void \fBon_utc_offset\fP ()"
.br
.ti -1c
.RI "void \fBon_tz_name\fP ()"
.br
.ti -1c
.RI "void \fBon_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_short_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_offset_year\fP ()"
.br
.ti -1c
.RI "void \fBon_century\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_iso_week_based_year\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_week_based_short_year\fP ()"
.br
.ti -1c
.RI "void \fBon_dec_month\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec0_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec1_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_iso_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_day_of_year\fP ()"
.br
.ti -1c
.RI "void \fBon_day_of_month\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_day_of_month_space\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_24_hour\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_12_hour\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_minute\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_second\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_12_hour_time\fP ()"
.br
.ti -1c
.RI "void \fBon_24_hour_time\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_time\fP ()"
.br
.ti -1c
.RI "void \fBon_am_pm\fP ()"
.br
.ti -1c
.RI "void \fBon_duration_value\fP ()"
.br
.ti -1c
.RI "void \fBon_duration_unit\fP ()"
.br
.ti -1c
.RI "\fBchrono_formatter\fP (FormatContext &ctx, OutputIt o, std::chrono::duration< Rep, Period > d)"
.br
.ti -1c
.RI "bool \fBhandle_nan_inf\fP ()"
.br
.ti -1c
.RI "Rep \fBhour\fP () const"
.br
.ti -1c
.RI "Rep \fBhour12\fP () const"
.br
.ti -1c
.RI "Rep \fBminute\fP () const"
.br
.ti -1c
.RI "Rep \fBsecond\fP () const"
.br
.ti -1c
.RI "std::tm \fBtime\fP () const"
.br
.ti -1c
.RI "void \fBwrite_sign\fP ()"
.br
.ti -1c
.RI "void \fBwrite\fP (Rep \fBvalue\fP, int width)"
.br
.ti -1c
.RI "template<typename Duration > void \fBwrite_fractional_seconds\fP (Duration d)"
.br
.ti -1c
.RI "void \fBwrite_nan\fP ()"
.br
.ti -1c
.RI "void \fBwrite_pinf\fP ()"
.br
.ti -1c
.RI "void \fBwrite_ninf\fP ()"
.br
.ti -1c
.RI "template<typename Callback , typename\&.\&.\&. Args> void \fBformat_tm\fP (const tm &time, Callback cb, Args\&.\&.\&. args)"
.br
.ti -1c
.RI "void \fBon_text\fP (const char_type *begin, const char_type *end)"
.br
.ti -1c
.RI "void \fBon_abbr_weekday\fP ()"
.br
.ti -1c
.RI "void \fBon_full_weekday\fP ()"
.br
.ti -1c
.RI "void \fBon_dec0_weekday\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec1_weekday\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_abbr_month\fP ()"
.br
.ti -1c
.RI "void \fBon_full_month\fP ()"
.br
.ti -1c
.RI "void \fBon_datetime\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_loc_date\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_loc_time\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_us_date\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_date\fP ()"
.br
.ti -1c
.RI "void \fBon_utc_offset\fP ()"
.br
.ti -1c
.RI "void \fBon_tz_name\fP ()"
.br
.ti -1c
.RI "void \fBon_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_short_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_offset_year\fP ()"
.br
.ti -1c
.RI "void \fBon_century\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_iso_week_based_year\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_week_based_short_year\fP ()"
.br
.ti -1c
.RI "void \fBon_dec_month\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec0_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_dec1_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_iso_week_of_year\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_day_of_year\fP ()"
.br
.ti -1c
.RI "void \fBon_day_of_month\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_day_of_month_space\fP (numeric_system)"
.br
.ti -1c
.RI "void \fBon_24_hour\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_12_hour\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_minute\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_second\fP (numeric_system ns)"
.br
.ti -1c
.RI "void \fBon_12_hour_time\fP ()"
.br
.ti -1c
.RI "void \fBon_24_hour_time\fP ()"
.br
.ti -1c
.RI "void \fBon_iso_time\fP ()"
.br
.ti -1c
.RI "void \fBon_am_pm\fP ()"
.br
.ti -1c
.RI "void \fBon_duration_value\fP ()"
.br
.ti -1c
.RI "void \fBon_duration_unit\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "FormatContext & \fBcontext\fP"
.br
.ti -1c
.RI "OutputIt \fBout\fP"
.br
.ti -1c
.RI "int \fBprecision\fP"
.br
.ti -1c
.RI "bool \fBlocalized\fP = false"
.br
.ti -1c
.RI "rep \fBval\fP"
.br
.ti -1c
.RI "seconds \fBs\fP"
.br
.ti -1c
.RI "bool \fBnegative\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
