.TH "md__ase_sprite_aseprite_third_party_curl_docs__h_t_t_p3" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__ase_sprite_aseprite_third_party_curl_docs__h_t_t_p3 \- HTTP3 (and QUIC) 
.PP

.SH "Resources"
.PP
\fCHTTP/3 Explained\fP - the online free book describing the protocols involved\&.
.PP
\fCQUIC implementation\fP - the wiki page describing the plan for how to support QUIC and HTTP/3 in curl and libcurl\&.
.PP
\fCquicwg\&.org\fP - home of the official protocol drafts
.SH "QUIC libraries"
.PP
QUIC libraries we're experimenting with:
.PP
\fCngtcp2\fP
.PP
\fCquiche\fP
.SH "Experimental!"
.PP
HTTP/3 and QUIC support in curl is considered \fBEXPERIMENTAL\fP until further notice\&. It needs to be enabled at build-time\&.
.PP
Further development and tweaking of the HTTP/3 support in curl will happen in in the master branch using pull-requests, just like ordinary changes\&.
.SH "ngtcp2 version"
.PP
.SS "Build with OpenSSL"
Build (patched) OpenSSL 
.PP
.nf
 % git clone --depth 1 -b OpenSSL_1_1_1k+quic https://github\&.com/quictls/openssl
 % cd openssl
 % \&./config enable-tls1_3 --prefix=<somewhere1>
 % make
 % make install_sw

.fi
.PP
 Build nghttp3 
.PP
.nf
 % cd \&.\&.
 % git clone https://github\&.com/ngtcp2/nghttp3
 % cd nghttp3
 % autoreconf -i
 % \&./configure --prefix=<somewhere2> --enable-lib-only
 % make
 % make install

.fi
.PP
 Build ngtcp2 
.PP
.nf
 % cd \&.\&.
 % git clone https://github\&.com/ngtcp2/ngtcp2
 % cd ngtcp2
 % autoreconf -i
 % \&./configure PKG_CONFIG_PATH=<somewhere1>/lib/pkgconfig:<somewhere2>/lib/pkgconfig LDFLAGS='-Wl,-rpath,<somewhere1>/lib' --prefix=<somewhere3> --enable-lib-only
 % make
 % make install

.fi
.PP
 Build curl 
.PP
.nf
 % cd \&.\&.
 % git clone https://github\&.com/curl/curl
 % cd curl
 % \&./buildconf
 % LDFLAGS='-Wl,-rpath,<somewhere1>/lib' \&./configure --with-openssl=<somewhere1> --with-nghttp3=<somewhere2> --with-ngtcp2=<somewhere3>
 % make

.fi
.PP
 
.SS "Build with GnuTLS"
Build GnuTLS 
.PP
.nf
 % git clone --depth 1 https://gitlab\&.com/gnutls/gnutls\&.git
 % cd gnutls
 % \&./bootstrap
 % \&./configure --disable-doc --prefix=<somewhere1>
 % make
 % make install

.fi
.PP
 Build nghttp3 
.PP
.nf
 % cd \&.\&.
 % git clone https://github\&.com/ngtcp2/nghttp3
 % cd nghttp3
 % autoreconf -i
 % \&./configure --prefix=<somewhere2> --enable-lib-only
 % make
 % make install

.fi
.PP
 Build ngtcp2 
.PP
.nf
 % cd \&.\&.
 % git clone https://github\&.com/ngtcp2/ngtcp2
 % cd ngtcp2
 % autoreconf -i
 % \&./configure PKG_CONFIG_PATH=<somewhere1>/lib/pkgconfig:<somewhere2>/lib/pkgconfig LDFLAGS='-Wl,-rpath,<somewhere1>/lib' --prefix=<somewhere3> --enable-lib-only --with-gnutls
 % make
 % make install

.fi
.PP
 Build curl 
.PP
.nf
 % cd \&.\&.
 % git clone https://github\&.com/curl/curl
 % cd curl
 % \&./buildconf
 % \&./configure --without-openssl --with-gnutls=<somewhere1> --with-nghttp3=<somewhere2> --with-ngtcp2=<somewhere3>
 % make

.fi
.PP
 
.SH "quiche version"
.PP
.SS "build"
Build quiche and BoringSSL: 
.PP
.nf
 % git clone --recursive https://github\&.com/cloudflare/quiche
 % cd quiche
 % cargo build --release --features ffi,pkg-config-meta,qlog
 % mkdir deps/boringssl/src/lib
 % ln -vnf $(find target/release -name libcrypto\&.a -o -name libssl\&.a) deps/boringssl/src/lib/

.fi
.PP
 Build curl: 
.PP
.nf
 % cd \&.\&.
 % git clone https://github\&.com/curl/curl
 % cd curl
 % \&./buildconf
 % \&./configure LDFLAGS='-Wl,-rpath,$PWD/\&.\&./quiche/target/release' --with-openssl=$PWD/\&.\&./quiche/deps/boringssl/src --with-quiche=$PWD/\&.\&./quiche/target/release
 % make

.fi
.PP
 
.SS "Run"
Use HTTP/3 directly: 
.PP
.nf
curl --http3 https://nghttp2\&.org:4433/

.fi
.PP
 Upgrade via Alt-Svc: 
.PP
.nf
curl --alt-svc altsvc\&.cache https://quic\&.aiortc\&.org/

.fi
.PP
 See this \fClist of public HTTP/3 servers\fP 
