.TH "md__ase_sprite_aseprite_third_party_curl_docs_libcurl__a_b_i" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__ase_sprite_aseprite_third_party_curl_docs_libcurl__a_b_i \- ABI - Application Binary \fBInterface\fP 
.PP
'ABI' describes the low-level interface between an application program and a library\&. Calling conventions, function arguments, return values, struct sizes/defines and more\&.
.PP
\fCWikipedia has a longer description\fP
.SH "Upgrades"
.PP
\fBA\fP libcurl upgrade does not break the ABI or change established and documented behavior\&. Your application can remain using libcurl just as before, only with fewer bugs and possibly with added new features\&.
.SH "Version Numbers"
.PP
In libcurl land, you cannot tell by the libcurl version number if that libcurl is binary compatible or not with another libcurl version\&. As a rule, we don't break the ABI so you can \fIalways\fP upgrade to a later version without any loss or change in functionality\&.
.SH "Soname Bumps"
.PP
Whenever there are changes done to the library that will cause an ABI breakage, that may require your application to get attention or possibly be changed to adhere to new things, we will bump the soname\&. Then the library will get a different output name and thus can in fact be installed in parallel with an older installed lib (on most systems)\&. Thus, old applications built against the previous ABI version will remain working and using the older lib, while newer applications build and use the newer one\&.
.PP
During the first seven years of libcurl releases, there have only been four ABI breakages\&.
.PP
We are determined to bump the SONAME as rarely as possible\&. Ideally, we never do it again\&.
.SH "Downgrades"
.PP
Going to an older libcurl version from one you're currently using can be a tricky thing\&. Mostly we add features and options to newer libcurls as that won't break ABI or hamper existing applications\&. This has the implication that going backwards may get you in a situation where you pick a libcurl that doesn't support the options your application needs\&. Or possibly you even downgrade so far so you cross an ABI break border and thus a different soname, and then your application may need to adapt to the modified ABI\&.
.SH "History"
.PP
The previous major library soname number bumps (breaking backwards compatibility) happened the following times:
.PP
0 - libcurl 7\&.1, August 2000
.PP
1 - libcurl 7\&.5 December 2000
.PP
2 - libcurl 7\&.7 March 2001
.PP
3 - libcurl 7\&.12\&.0 June 2004
.PP
4 - libcurl 7\&.16\&.0 October 2006 
