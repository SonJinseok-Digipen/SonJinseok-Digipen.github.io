.TH "TiXmlPrinter" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TiXmlPrinter
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <tinyxml\&.h>\fP
.PP
Inherits \fBTiXmlVisitor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBVisitEnter\fP (const \fBTiXmlDocument\fP &doc)"
.br
.RI "Visit a document\&. "
.ti -1c
.RI "virtual bool \fBVisitExit\fP (const \fBTiXmlDocument\fP &doc)"
.br
.RI "Visit a document\&. "
.ti -1c
.RI "virtual bool \fBVisitEnter\fP (const \fBTiXmlElement\fP &element, const \fBTiXmlAttribute\fP *firstAttribute)"
.br
.RI "Visit an element\&. "
.ti -1c
.RI "virtual bool \fBVisitExit\fP (const \fBTiXmlElement\fP &element)"
.br
.RI "Visit an element\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBTiXmlDeclaration\fP &declaration)"
.br
.RI "Visit a declaration\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBTiXmlText\fP &text)"
.br
.RI "Visit a text node\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBTiXmlComment\fP &comment)"
.br
.RI "Visit a comment node\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBTiXmlUnknown\fP &unknown)"
.br
.RI "Visit an unknown node\&. "
.ti -1c
.RI "void \fBSetIndent\fP (const char *_indent)"
.br
.ti -1c
.RI "const char * \fBIndent\fP ()"
.br
.RI "Query the indention string\&. "
.ti -1c
.RI "void \fBSetLineBreak\fP (const char *_lineBreak)"
.br
.ti -1c
.RI "const char * \fBLineBreak\fP ()"
.br
.RI "Query the current line breaking string\&. "
.ti -1c
.RI "void \fBSetStreamPrinting\fP ()"
.br
.ti -1c
.RI "const char * \fBCStr\fP ()"
.br
.RI "Return the result\&. "
.ti -1c
.RI "size_t \fBSize\fP ()"
.br
.RI "Return the length of the result string\&. "
.in -1c
.in +1c
.ti -1c
.RI "virtual bool \fBVisitEnter\fP (const \fBTiXmlDocument\fP &)"
.br
.RI "Visit a document\&. "
.ti -1c
.RI "virtual bool \fBVisitExit\fP (const \fBTiXmlDocument\fP &)"
.br
.RI "Visit a document\&. "
.ti -1c
.RI "virtual bool \fBVisitEnter\fP (const \fBTiXmlElement\fP &, const \fBTiXmlAttribute\fP *)"
.br
.RI "Visit an element\&. "
.ti -1c
.RI "virtual bool \fBVisitExit\fP (const \fBTiXmlElement\fP &)"
.br
.RI "Visit an element\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBTiXmlDeclaration\fP &)"
.br
.RI "Visit a declaration\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBTiXmlText\fP &)"
.br
.RI "Visit a text node\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBTiXmlComment\fP &)"
.br
.RI "Visit a comment node\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBTiXmlUnknown\fP &)"
.br
.RI "Visit an unknown node\&. "
.in -1c
.SH "Detailed Description"
.PP 
Print to memory functionality\&. The \fBTiXmlPrinter\fP is useful when you need to: 
.PP
.nf
-# Print to memory (especially in non-STL mode)
-# Control formatting (line endings, etc\&.)

When constructed, the TiXmlPrinter is in its default 'pretty printing' mode\&.
Before calling Accept() you can call methods to control the printing
of the XML document\&. After TiXmlNode::Accept() is called, the printed document can
be accessed via the CStr(), Str(), and Size() methods\&.

TiXmlPrinter uses the Visitor API\&.
@verbatim
TiXmlPrinter printer;
printer\&.SetIndent( '\\t' );

doc\&.Accept( &printer );
fprintf( stdout, '%s', printer\&.CStr() );
@endverbatim

.fi
.PP
 
.SH "Member Function Documentation"
.PP 
.SS "void TiXmlPrinter::SetIndent (const char * _indent)\fC [inline]\fP"
Set the indent characters for printing\&. By default 4 spaces but tab (\\t) is also useful, or null/empty string for no indentation\&. 
.SS "void TiXmlPrinter::SetLineBreak (const char * _lineBreak)\fC [inline]\fP"
Set the line breaking string\&. By default set to newline (
.br
)\&. Some operating systems prefer other characters, or can be set to the null/empty string for no indenation\&. 
.SS "void TiXmlPrinter::SetStreamPrinting ()\fC [inline]\fP"
Switch over to 'stream printing' which is the most dense formatting without linebreaks\&. Common when the XML is needed for network transmission\&. 
.SS "bool TiXmlPrinter::Visit (const \fBTiXmlComment\fP &)\fC [virtual]\fP"

.PP
Visit a comment node\&. 
.PP
Reimplemented from \fBTiXmlVisitor\fP\&.
.SS "bool TiXmlPrinter::Visit (const \fBTiXmlDeclaration\fP &)\fC [virtual]\fP"

.PP
Visit a declaration\&. 
.PP
Reimplemented from \fBTiXmlVisitor\fP\&.
.SS "bool TiXmlPrinter::Visit (const \fBTiXmlText\fP &)\fC [virtual]\fP"

.PP
Visit a text node\&. 
.PP
Reimplemented from \fBTiXmlVisitor\fP\&.
.SS "bool TiXmlPrinter::Visit (const \fBTiXmlUnknown\fP &)\fC [virtual]\fP"

.PP
Visit an unknown node\&. 
.PP
Reimplemented from \fBTiXmlVisitor\fP\&.
.SS "bool TiXmlPrinter::VisitEnter (const \fBTiXmlDocument\fP &)\fC [virtual]\fP"

.PP
Visit a document\&. 
.PP
Reimplemented from \fBTiXmlVisitor\fP\&.
.SS "bool TiXmlPrinter::VisitEnter (const \fBTiXmlElement\fP &, const \fBTiXmlAttribute\fP *)\fC [virtual]\fP"

.PP
Visit an element\&. 
.PP
Reimplemented from \fBTiXmlVisitor\fP\&.
.SS "bool TiXmlPrinter::VisitExit (const \fBTiXmlDocument\fP &)\fC [virtual]\fP"

.PP
Visit a document\&. 
.PP
Reimplemented from \fBTiXmlVisitor\fP\&.
.SS "bool TiXmlPrinter::VisitExit (const \fBTiXmlElement\fP &)\fC [virtual]\fP"

.PP
Visit an element\&. 
.PP
Reimplemented from \fBTiXmlVisitor\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
