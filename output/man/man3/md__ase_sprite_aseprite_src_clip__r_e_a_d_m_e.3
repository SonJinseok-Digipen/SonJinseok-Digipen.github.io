.TH "md__ase_sprite_aseprite_src_clip__r_e_a_d_m_e" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__ase_sprite_aseprite_src_clip__r_e_a_d_m_e \- Clip Library 
.PP
\fICopyright (c) 2015-2022 David Capello\fP
.PP
\fC\fP \fC\fP
.PP
Library to copy/retrieve content to/from the clipboard/pasteboard\&.
.SH "Features"
.PP
Available features on Windows, macOS, and Linux (X11):
.PP
.IP "\(bu" 2
Copy/paste UTF-8 text\&.
.IP "\(bu" 2
Copy/paste user-defined data\&.
.IP "\(bu" 2
Copy/paste RGB/RGBA images\&. This library use non-premultiplied alpha RGB values\&.
.PP
.SH "Example"
.PP
.PP
.nf
#include "clip\&.h"
#include <iostream>

int main() {
  clip::set_text("Hello World");

  std::string value;
  clip::get_text(value);
  std::cout << value << "\\n";
}
.fi
.PP
.SH "User-defined clipboard formats"
.PP
.PP
.nf
#include "clip\&.h"

int main() {
  clip::format my_format =
    clip::register_format("com\&.appname\&.FormatName");

  int value = 32;

  clip::lock l;
  l\&.clear();
  l\&.set_data(clip::text_format(), "Alternative text for value 32");
  l\&.set_data(my_format, &value, sizeof(int));
}
.fi
.PP
.SH "Platform specific details"
.PP
.IP "\(bu" 2
If two versions of your application (32-bit and 64-bit) can run at at the same time, remember to avoid storing data types that could change depending on the platform (e\&.g\&. \fCsize_t\fP) in your custom format data\&.
.IP "\(bu" 2
\fBWindows\fP:
.IP "  \(bu" 4
\fCLimited number of clipboard formats on Windows\fP
.PP

.IP "\(bu" 2
\fBLinux\fP:
.IP "  \(bu" 4
To be able to copy/paste on Linux you need \fClibx11-dev\fP/\fClibX11-devel\fP package\&.
.IP "  \(bu" 4
To copy/paste images you will need \fClibpng-dev\fP/\fClibpng-devel\fP package\&.
.PP

.PP
.SH "Who is using this library?"
.PP
\fCCheck the wiki\fP to know what projects are using the \fCclip\fP library\&. 
