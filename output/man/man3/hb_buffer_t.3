.TH "hb_buffer_t" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hb_buffer_t
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef long \fBscratch_buffer_t\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "HB_NODISCARD bool \fBin_error\fP () const"
.br
.ti -1c
.RI "void \fBallocate_var\fP (unsigned int start, unsigned int count)"
.br
.ti -1c
.RI "void \fBdeallocate_var\fP (unsigned int start, unsigned int count)"
.br
.ti -1c
.RI "void \fBassert_var\fP (unsigned int start, unsigned int count)"
.br
.ti -1c
.RI "void \fBdeallocate_var_all\fP ()"
.br
.ti -1c
.RI "\fBhb_glyph_info_t\fP & \fBcur\fP (unsigned int i=0)"
.br
.ti -1c
.RI "\fBhb_glyph_info_t\fP \fBcur\fP (unsigned int i=0) const"
.br
.ti -1c
.RI "\fBhb_glyph_position_t\fP & \fBcur_pos\fP (unsigned int i=0)"
.br
.ti -1c
.RI "\fBhb_glyph_position_t\fP \fBcur_pos\fP (unsigned int i=0) const"
.br
.ti -1c
.RI "\fBhb_glyph_info_t\fP & \fBprev\fP ()"
.br
.ti -1c
.RI "\fBhb_glyph_info_t\fP \fBprev\fP () const"
.br
.ti -1c
.RI "HB_INTERNAL void \fBsimilar\fP (const \fBhb_buffer_t\fP &src)"
.br
.ti -1c
.RI "HB_INTERNAL void \fBreset\fP ()"
.br
.ti -1c
.RI "HB_INTERNAL void \fBclear\fP ()"
.br
.ti -1c
.RI "HB_INTERNAL void \fBenter\fP ()"
.br
.ti -1c
.RI "HB_INTERNAL void \fBleave\fP ()"
.br
.ti -1c
.RI "HB_INTERNAL bool \fBverify\fP (\fBhb_buffer_t\fP *text_buffer, \fBhb_font_t\fP *font, const \fBhb_feature_t\fP *features, unsigned int num_features, const char *const *shapers)"
.br
.ti -1c
.RI "unsigned int \fBbacktrack_len\fP () const"
.br
.ti -1c
.RI "unsigned int \fBlookahead_len\fP () const"
.br
.ti -1c
.RI "uint8_t \fBnext_serial\fP ()"
.br
.ti -1c
.RI "HB_INTERNAL void \fBadd\fP (hb_codepoint_t codepoint, unsigned int cluster)"
.br
.ti -1c
.RI "HB_INTERNAL void \fBadd_info\fP (const \fBhb_glyph_info_t\fP &glyph_info)"
.br
.ti -1c
.RI "void \fBreverse_range\fP (unsigned start, unsigned end)"
.br
.ti -1c
.RI "void \fBreverse\fP ()"
.br
.ti -1c
.RI "template<typename FuncType > void \fBreverse_groups\fP (const FuncType &\fBgroup\fP, bool merge_clusters=false)"
.br
.ti -1c
.RI "template<typename FuncType > unsigned \fBgroup_end\fP (unsigned start, const FuncType &\fBgroup\fP) const"
.br
.ti -1c
.RI "void \fBreverse_clusters\fP ()"
.br
.ti -1c
.RI "HB_INTERNAL void \fBguess_segment_properties\fP ()"
.br
.ti -1c
.RI "HB_INTERNAL void \fBsync\fP ()"
.br
.ti -1c
.RI "HB_INTERNAL void \fBclear_output\fP ()"
.br
.ti -1c
.RI "HB_INTERNAL void \fBclear_positions\fP ()"
.br
.ti -1c
.RI "template<typename T > HB_NODISCARD bool \fBreplace_glyphs\fP (unsigned int num_in, unsigned int num_out, const T *glyph_data)"
.br
.ti -1c
.RI "HB_NODISCARD bool \fBreplace_glyph\fP (hb_codepoint_t glyph_index)"
.br
.ti -1c
.RI "HB_NODISCARD bool \fBoutput_glyph\fP (hb_codepoint_t glyph_index)"
.br
.ti -1c
.RI "HB_NODISCARD bool \fBoutput_info\fP (const \fBhb_glyph_info_t\fP &glyph_info)"
.br
.ti -1c
.RI "HB_NODISCARD bool \fBcopy_glyph\fP ()"
.br
.ti -1c
.RI "HB_NODISCARD bool \fBnext_glyph\fP ()"
.br
.ti -1c
.RI "HB_NODISCARD bool \fBnext_glyphs\fP (unsigned int n)"
.br
.ti -1c
.RI "void \fBskip_glyph\fP ()"
.br
.ti -1c
.RI "void \fBreset_masks\fP (hb_mask_t mask)"
.br
.ti -1c
.RI "void \fBadd_masks\fP (hb_mask_t mask)"
.br
.ti -1c
.RI "HB_INTERNAL void \fBset_masks\fP (hb_mask_t \fBvalue\fP, hb_mask_t mask, unsigned int cluster_start, unsigned int cluster_end)"
.br
.ti -1c
.RI "void \fBmerge_clusters\fP (unsigned int start, unsigned int end)"
.br
.ti -1c
.RI "HB_INTERNAL void \fBmerge_clusters_impl\fP (unsigned int start, unsigned int end)"
.br
.ti -1c
.RI "HB_INTERNAL void \fBmerge_out_clusters\fP (unsigned int start, unsigned int end)"
.br
.ti -1c
.RI "HB_INTERNAL void \fBdelete_glyph\fP ()"
.br
.ti -1c
.RI "void \fB_set_glyph_flags\fP (hb_mask_t mask, unsigned start=0, unsigned end=(unsigned) \-1, bool interior=false, bool from_out_buffer=false)"
.br
.ti -1c
.RI "void \fBunsafe_to_break\fP (unsigned int start=0, unsigned int end=\-1)"
.br
.ti -1c
.RI "void \fBunsafe_to_concat\fP (unsigned int start=0, unsigned int end=\-1)"
.br
.ti -1c
.RI "void \fBunsafe_to_break_from_outbuffer\fP (unsigned int start=0, unsigned int end=\-1)"
.br
.ti -1c
.RI "void \fBunsafe_to_concat_from_outbuffer\fP (unsigned int start=0, unsigned int end=\-1)"
.br
.ti -1c
.RI "HB_NODISCARD HB_INTERNAL bool \fBmove_to\fP (unsigned int i)"
.br
.ti -1c
.RI "HB_NODISCARD HB_INTERNAL bool \fBenlarge\fP (unsigned int size)"
.br
.ti -1c
.RI "HB_NODISCARD bool \fBensure\fP (unsigned int size)"
.br
.ti -1c
.RI "HB_NODISCARD bool \fBensure_inplace\fP (unsigned int size)"
.br
.ti -1c
.RI "void \fBassert_glyphs\fP ()"
.br
.ti -1c
.RI "void \fBassert_unicode\fP ()"
.br
.ti -1c
.RI "HB_NODISCARD bool \fBensure_glyphs\fP ()"
.br
.ti -1c
.RI "HB_NODISCARD bool \fBensure_unicode\fP ()"
.br
.ti -1c
.RI "HB_NODISCARD HB_INTERNAL bool \fBmake_room_for\fP (unsigned int num_in, unsigned int num_out)"
.br
.ti -1c
.RI "HB_NODISCARD HB_INTERNAL bool \fBshift_forward\fP (unsigned int count)"
.br
.ti -1c
.RI "HB_INTERNAL scratch_buffer_t * \fBget_scratch_buffer\fP (unsigned int *size)"
.br
.ti -1c
.RI "void \fBclear_context\fP (unsigned int side)"
.br
.ti -1c
.RI "HB_INTERNAL void \fBsort\fP (unsigned int start, unsigned int end, int(*compar)(const \fBhb_glyph_info_t\fP *, const \fBhb_glyph_info_t\fP *))"
.br
.ti -1c
.RI "bool \fBmessaging\fP ()"
.br
.ti -1c
.RI "bool \fBmessage\fP (\fBhb_font_t\fP *font, const char *fmt,\&.\&.\&.) HB_PRINTF_FUNC(3"
.br
.ti -1c
.RI "\fBva_start\fP (ap, fmt)"
.br
.ti -1c
.RI "\fBva_end\fP (ap)"
.br
.ti -1c
.RI "HB_INTERNAL bool \fBmessage_impl\fP (\fBhb_font_t\fP *font, const char *fmt, va_list ap) HB_PRINTF_FUNC(3"
.br
.ti -1c
.RI "void \fB_infos_set_glyph_flags\fP (\fBhb_glyph_info_t\fP *infos, unsigned int start, unsigned int end, unsigned int cluster, hb_mask_t mask)"
.br
.ti -1c
.RI "void \fBclear_glyph_flags\fP (hb_mask_t mask=0)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fB_cluster_group_func\fP (const \fBhb_glyph_info_t\fP &\fBa\fP, const \fBhb_glyph_info_t\fP &b)"
.br
.ti -1c
.RI "HB_INTERNAL bool static void \fBset_cluster\fP (\fBhb_glyph_info_t\fP &inf, unsigned int cluster, unsigned int mask=0)"
.br
.ti -1c
.RI "static unsigned \fB_infos_find_min_cluster\fP (const \fBhb_glyph_info_t\fP *infos, unsigned start, unsigned end, unsigned cluster=UINT_MAX)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBhb_object_header_t\fP \fBheader\fP"
.br
.ti -1c
.RI "\fBhb_unicode_funcs_t\fP * \fBunicode\fP"
.br
.ti -1c
.RI "hb_buffer_flags_t \fBflags\fP"
.br
.ti -1c
.RI "hb_buffer_cluster_level_t \fBcluster_level\fP"
.br
.ti -1c
.RI "hb_codepoint_t \fBreplacement\fP"
.br
.ti -1c
.RI "hb_codepoint_t \fBinvisible\fP"
.br
.ti -1c
.RI "hb_codepoint_t \fBnot_found\fP"
.br
.ti -1c
.RI "hb_buffer_content_type_t \fBcontent_type\fP"
.br
.ti -1c
.RI "\fBhb_segment_properties_t\fP \fBprops\fP"
.br
.ti -1c
.RI "bool \fBsuccessful\fP"
.br
.ti -1c
.RI "bool \fBhave_output\fP"
.br
.ti -1c
.RI "bool \fBhave_positions\fP"
.br
.ti -1c
.RI "unsigned int \fBidx\fP"
.br
.ti -1c
.RI "unsigned int \fBlen\fP"
.br
.ti -1c
.RI "unsigned int \fBout_len\fP"
.br
.ti -1c
.RI "unsigned int \fBallocated\fP"
.br
.ti -1c
.RI "\fBhb_glyph_info_t\fP * \fBinfo\fP"
.br
.ti -1c
.RI "\fBhb_glyph_info_t\fP * \fBout_info\fP"
.br
.ti -1c
.RI "\fBhb_glyph_position_t\fP * \fBpos\fP"
.br
.ti -1c
.RI "hb_codepoint_t \fBcontext\fP [2][CONTEXT_LENGTH]"
.br
.ti -1c
.RI "unsigned int \fBcontext_len\fP [2]"
.br
.ti -1c
.RI "uint8_t \fBallocated_var_bits\fP"
.br
.ti -1c
.RI "uint8_t \fBserial\fP"
.br
.ti -1c
.RI "hb_buffer_scratch_flags_t \fBscratch_flags\fP"
.br
.ti -1c
.RI "unsigned int \fBmax_len\fP"
.br
.ti -1c
.RI "int \fBmax_ops\fP"
.br
.ti -1c
.RI "hb_buffer_message_func_t \fBmessage_func\fP"
.br
.ti -1c
.RI "void * \fBmessage_data\fP"
.br
.ti -1c
.RI "hb_destroy_func_t \fBmessage_destroy\fP"
.br
.ti -1c
.RI "unsigned \fBmessage_depth\fP"
.br
.ti -1c
.RI "bool \fBmessage_depth\fP"
.br
.ti -1c
.RI "va_list \fBap\fP"
.br
.ti -1c
.RI "bool \fBret\fP = message_impl (font, fmt, ap)"
.br
.ti -1c
.RI "\fBmessage_depth\fP"
.br
.ti -1c
.RI "return \fBret\fP"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr unsigned \fBCONTEXT_LENGTH\fP = 5u"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "bool hb_buffer_t::message_depth"
\fBInitial value:\fP.PP
.nf
{



    if (!messaging ())
      return true
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
