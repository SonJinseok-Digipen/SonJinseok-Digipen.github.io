.TH "md__ase_sprite_aseprite_third_party_fmt_test_fuzzing__r_e_a_d_m_e" 3 "Wed Feb 1 2023" "Version Version 0.0" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__ase_sprite_aseprite_third_party_fmt_test_fuzzing__r_e_a_d_m_e \- Running the fuzzers locally 
.PP
There is a \fChelper script\fP to build the fuzzers, which has only been tested on Debian and Ubuntu linux so far\&. There should be no problems fuzzing on Windows (using clang>=8) or on Mac, but the script will probably not work out of the box\&.
.PP
Something along 
.PP
.nf
mkdir build
cd build
export CXX=clang++
export CXXFLAGS="\-fsanitize=fuzzer\-no\-link \-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION= \-g"
cmake \&.\&. \-DFMT_SAFE_DURATION_CAST=On \-DFMT_FUZZ=On \-DFMT_FUZZ_LINKMAIN=Off \-DFMT_FUZZ_LDFLAGS="\-fsanitize=fuzzer"
cmake \-\-build \&.

.fi
.PP
 should work to build the fuzzers for all platforms which clang supports\&.
.PP
Execute a fuzzer with for instance 
.PP
.nf
cd build
export UBSAN_OPTIONS=halt_on_error=1
mkdir out_chrono
bin/fuzzer_chrono_duration out_chrono

.fi
.PP
 
